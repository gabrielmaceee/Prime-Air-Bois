"Qualité de l'air extérieur","Autre (préciser)","Pas de réponse",
"Aucun","Menuiseries", "Murs / façade","Ne sait pas","Pas de réponse","Plancher bas","Toiture",
"intersaison", "soirée", "journée", "nuit", "matin"," très froid", "Pas réponse"
)
data_binaire = data[,setdiff(names(data), binaires)]
nb <- c(0,12, 19,26,33)
sep = c(";", ";", ", ", ", ")
for(i in 1:4){
df_long <- data[, c("N° dossier", binaires[i])] %>%
separate_rows(binaires[i], sep = sep[i])
df_long <- dummy_cols(df_long, select_columns = binaires[i], remove_first_dummy = FALSE, remove_selected_columns = TRUE)
df_binary <- df_long %>%
group_by(`N° dossier`) %>%
summarize(across(everything(), max))
names = c(modalités[(nb[i]+1):nb[i+1]])
names(df_binary) <- c("N° dossier",names)
data_binaire <- data_binaire %>% left_join( df_binary, by = "N° dossier")
print(names)
cont = c()
for(v in names){
for(v2 in names){
cont = c(cont, dim(df_binary[df_binary[,v] == 1 & df_binary[v2] == 1,])[1])
}
}
contingence = matrix(cont, nrow = nb[i+1] - nb[i],  ncol = nb[i+1] - nb[i])
rownames(contingence) <- names
colnames(contingence) <- names
seul = c()
for(r in names){
for(c in names){
if(c==r){
seul = c(seul,contingence[r,c])
contingence[r,c] = 0
}
}
}
nom = binaires[i]
coul = c(brewer.pal(n = nb[i+1] - nb[i], name = 'Paired'))
dataf <- data.frame(names = names,seul = seul,coul = coul)
if(i == 2){
dataf$names <- factor(dataf$names, levels = c("Qualité air de mon logement","Économiser du bois/énergie","Économiser de l'argent","Gagner en confort/chaleur",
"Qualité de l'air extérieur","Autre (préciser)","Pas de réponse"))
}
myplot<- ggplot(dataf, aes(x = names, y = seul, fill = coul)) +
geom_bar(stat = "identity") +
scale_fill_identity() + # Utiliser les couleurs spécifiées dans le vecteur 'coul'
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 10)) + # Faire pivoter les étiquettes des axes
labs(title = nom, x = "Noms", y = "Valeurs")
ggsave(glue("../3_Resultat/graphes/Univariés/{nom}.png"), myplot, device = "png")
png(glue("../3_Resultat/graphes/Univariés/{nom}_2.png"))
barplot(contingence, col = coul , names = names,  las = 2)
#axis(1, at = 1.2 * 1:(nb[i+1] - nb[i]) -0.5, labels=names,  las = 2)
if(i == 3) {legend("top", legend = names, fill = coul, bg = "transparent")
} else legend("topright", legend = names, fill = coul, bg = "transparent")
dev.off()
}
for(i in 1:4){
df_long <- data[, c("N° dossier", binaires[i])] %>%
separate_rows(binaires[i], sep = sep[i])
df_long <- dummy_cols(df_long, select_columns = binaires[i], remove_first_dummy = FALSE, remove_selected_columns = TRUE)
df_binary <- df_long %>%
group_by(`N° dossier`) %>%
summarize(across(everything(), max))
names = c(modalités[(nb[i]+1):nb[i+1]])
names(df_binary) <- c("N° dossier",names)
data_binaire <- data_binaire %>% left_join( df_binary, by = "N° dossier")
print(names)
cont = c()
for(v in names){
for(v2 in names){
cont = c(cont, dim(df_binary[df_binary[,v] == 1 & df_binary[v2] == 1,])[1])
}
}
contingence = matrix(cont, nrow = nb[i+1] - nb[i],  ncol = nb[i+1] - nb[i])
rownames(contingence) <- names
colnames(contingence) <- names
seul = c()
for(r in names){
for(c in names){
if(c==r){
seul = c(seul,contingence[r,c])
contingence[r,c] = 0
}
}
}
nom = binaires[i]
coul = c(brewer.pal(n = nb[i+1] - nb[i], name = 'Paired'))
dataf <- data.frame(names = names,seul = seul,coul = coul)
if(i == 2){
dataf$names <- factor(dataf$names, levels = c("Qualité air de mon logement","Économiser du bois/énergie","Économiser de l'argent","Gagner en confort/chaleur",
"Qualité de l'air extérieur","Autre (préciser)","Pas de réponse"))
}
if(i == 4){
dataf$names <- factor(dataf$names, levels = c("matin", "journée","soirée", "nuit", "intersaison", "très froid", "Pas réponse"))
}
myplot<- ggplot(dataf, aes(x = names, y = seul, fill = coul)) +
geom_bar(stat = "identity") +
scale_fill_identity() + # Utiliser les couleurs spécifiées dans le vecteur 'coul'
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 10)) + # Faire pivoter les étiquettes des axes
labs(title = nom, x = "Noms", y = "Valeurs")
ggsave(glue("../3_Resultat/graphes/Univariés/{nom}.png"), myplot, device = "png")
png(glue("../3_Resultat/graphes/Univariés/{nom}_2.png"))
barplot(contingence, col = coul , names = names,  las = 2)
#axis(1, at = 1.2 * 1:(nb[i+1] - nb[i]) -0.5, labels=names,  las = 2)
if(i == 3) {legend("top", legend = names, fill = coul, bg = "transparent")
} else legend("topright", legend = names, fill = coul, bg = "transparent")
dev.off()
}
for(i in 1:4){
df_long <- data[, c("N° dossier", binaires[i])] %>%
separate_rows(binaires[i], sep = sep[i])
df_long <- dummy_cols(df_long, select_columns = binaires[i], remove_first_dummy = FALSE, remove_selected_columns = TRUE)
df_binary <- df_long %>%
group_by(`N° dossier`) %>%
summarize(across(everything(), max))
names = c(modalités[(nb[i]+1):nb[i+1]])
names(df_binary) <- c("N° dossier",names)
data_binaire <- data_binaire %>% left_join( df_binary, by = "N° dossier")
print(names)
cont = c()
for(v in names){
for(v2 in names){
cont = c(cont, dim(df_binary[df_binary[,v] == 1 & df_binary[v2] == 1,])[1])
}
}
contingence = matrix(cont, nrow = nb[i+1] - nb[i],  ncol = nb[i+1] - nb[i])
rownames(contingence) <- names
colnames(contingence) <- names
seul = c()
for(r in names){
for(c in names){
if(c==r){
seul = c(seul,contingence[r,c])
contingence[r,c] = 0
}
}
}
nom = binaires[i]
coul = c(brewer.pal(n = nb[i+1] - nb[i], name = 'Paired'))
dataf <- data.frame(names = names,seul = seul,coul = coul)
if(i == 2){
dataf$names <- factor(dataf$names, levels = c("Qualité air de mon logement","Économiser du bois/énergie","Économiser de l'argent","Gagner en confort/chaleur",
"Qualité de l'air extérieur","Autre (préciser)","Pas de réponse"))
}
if(i == 4){
dataf$names <- factor(dataf$names, levels = c("matin", "journée","soirée", "nuit", "intersaison", " très froid", "Pas réponse"))
}
myplot<- ggplot(dataf, aes(x = names, y = seul, fill = coul)) +
geom_bar(stat = "identity") +
scale_fill_identity() + # Utiliser les couleurs spécifiées dans le vecteur 'coul'
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 10)) + # Faire pivoter les étiquettes des axes
labs(title = nom, x = "Noms", y = "Valeurs")
ggsave(glue("../3_Resultat/graphes/Univariés/{nom}.png"), myplot, device = "png")
png(glue("../3_Resultat/graphes/Univariés/{nom}_2.png"))
barplot(contingence, col = coul , names = names,  las = 2)
#axis(1, at = 1.2 * 1:(nb[i+1] - nb[i]) -0.5, labels=names,  las = 2)
if(i == 3) {legend("top", legend = names, fill = coul, bg = "transparent")
} else legend("topright", legend = names, fill = coul, bg = "transparent")
dev.off()
}
data <- read_excel("C:/Users/gmace/PAB/Projet Bois-buche/data/3_Resultat/data_questionnaire_complet.xlsx")
library(fastDummies)
df_long <- data[, c("N..dossier", "Connaissance.aide" )] %>%
separate_rows("Connaissance.aide", sep = ";")
df_long <- dummy_cols(df_long, select_columns = "Connaissance.aide", remove_first_dummy = FALSE, remove_selected_columns = TRUE)
df_binary <- df_long %>%
group_by(`N..dossier`) %>%
summarize(across(everything(), max))
names = c("« Bouche oreille »", "ALEC/AGEDEN","Autre","G.A.M", "Installateur", "Grésivaudan",
"Voironnais","Mairie","Notaire/conformité","Pas de réponse", "Presse locale", "Site Internet (préciser)")
names(df_binary) <- c("N° dossier",names)
interco = 0
for(i in c(1:dim(df_binary)[1])){
if(df_binary[i, "G.A.M"] == 1) interco = interco + 1
else if(df_binary[i, "Voironnais"] == 1) interco = interco + 1
else if(df_binary[i, "Grésivaudan"] == 1) interco = interco + 1
}
cont = c()
for(v in names){
for(v2 in names){
cont = c(cont, dim(df_binary[df_binary[,v] == 1 & df_binary[v2] == 1,])[1])
}
}
contingence = matrix(cont, nrow = 12,  ncol = 12)
rownames(contingence) <- names
colnames(contingence) <- names
seul = c()
for(r in setdiff(names, c("G.A.M", "Grésivaudan", "Voironnais"))){
for(c in setdiff(names, c("G.A.M", "Grésivaudan", "Voironnais"))){
if(c==r){
seul = c(seul,contingence[r,c])
}
}
}
nom = "Connaissance.aide"
coul = c(brewer.pal(n = 10, name = 'Paired'))
names = c("Bouche oreille", "ALEC/AGEDEN","Autre", "Installateur",
"Mairie","Notaire/conformité","Pas de réponse", "Presse locale", "Site Internet", "intercommunalités")
dataf <- data.frame(names = names,seul = c(seul, interco) ,coul = coul)
myplot<- ggplot(dataf, aes(x = names, y = seul, fill = coul)) +
geom_bar(stat = "identity") +
scale_fill_identity() + # Utiliser les couleurs spécifiées dans le vecteur 'coul'
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 12)) + # Faire pivoter les étiquettes des axes
labs(title = nom, x = "Noms", y = "Valeurs")
myplot
dataf$names <- factor(dataf$names, levels = c("« Bouche oreille »", "ALEC/AGEDEN","G.A.M", "Installateur", "Grésivaudan",
"Voironnais","Mairie","Notaire/conformité", "Presse locale", "Site Internet (préciser)","Autre",,"Pas de réponse"))
myplot<- ggplot(dataf, aes(x = names, y = seul, fill = coul)) +
geom_bar(stat = "identity") +
scale_fill_identity() + # Utiliser les couleurs spécifiées dans le vecteur 'coul'
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 12)) + # Faire pivoter les étiquettes des axes
labs(title = nom, x = "Noms", y = "Valeurs")
dataf$names <- factor(dataf$names, levels = c("« Bouche oreille »", "ALEC/AGEDEN","G.A.M", "Installateur", "Grésivaudan",
"Voironnais","Mairie","Notaire/conformité", "Presse locale", "Site Internet (préciser)","Autre","Pas de réponse"))
myplot<- ggplot(dataf, aes(x = names, y = seul, fill = coul)) +
geom_bar(stat = "identity") +
scale_fill_identity() + # Utiliser les couleurs spécifiées dans le vecteur 'coul'
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 12)) + # Faire pivoter les étiquettes des axes
labs(title = nom, x = "Noms", y = "Valeurs")
myplot
dataf$names <- factor(dataf$names, levels = c("intercommunalités", "ALEC/AGEDEN", "Mairie", "« Bouche oreille »",  "Installateur", "Notaire/conformité",
"Presse locale", "Site Internet (préciser)","Autre","Pas de réponse"))
myplot<- ggplot(dataf, aes(x = names, y = seul, fill = coul)) +
geom_bar(stat = "identity") +
scale_fill_identity() + # Utiliser les couleurs spécifiées dans le vecteur 'coul'
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 12)) + # Faire pivoter les étiquettes des axes
labs(title = nom, x = "Noms", y = "Valeurs")
myplot
df_long <- data[, c("N..dossier", "Connaissance.aide" )] %>%
separate_rows("Connaissance.aide", sep = ";")
df_long <- dummy_cols(df_long, select_columns = "Connaissance.aide", remove_first_dummy = FALSE, remove_selected_columns = TRUE)
df_binary <- df_long %>%
group_by(`N..dossier`) %>%
summarize(across(everything(), max))
names = c("« Bouche oreille »", "ALEC/AGEDEN","Autre","G.A.M", "Installateur", "Grésivaudan",
"Voironnais","Mairie","Notaire/conformité","Pas de réponse", "Presse locale", "Site Internet (préciser)")
names(df_binary) <- c("N° dossier",names)
interco = 0
for(i in c(1:dim(df_binary)[1])){
if(df_binary[i, "G.A.M"] == 1) interco = interco + 1
else if(df_binary[i, "Voironnais"] == 1) interco = interco + 1
else if(df_binary[i, "Grésivaudan"] == 1) interco = interco + 1
}
cont = c()
for(v in names){
for(v2 in names){
cont = c(cont, dim(df_binary[df_binary[,v] == 1 & df_binary[v2] == 1,])[1])
}
}
contingence = matrix(cont, nrow = 12,  ncol = 12)
rownames(contingence) <- names
colnames(contingence) <- names
seul = c()
for(r in setdiff(names, c("G.A.M", "Grésivaudan", "Voironnais"))){
for(c in setdiff(names, c("G.A.M", "Grésivaudan", "Voironnais"))){
if(c==r){
seul = c(seul,contingence[r,c])
}
}
}
nom = "Connaissance.aide"
coul = c(brewer.pal(n = 10, name = 'Paired'))
names = c("Bouche oreille", "ALEC/AGEDEN","Autre", "Installateur",
"Mairie","Notaire/conformité","Pas de réponse", "Presse locale", "Site Internet", "intercommunalités")
dataf <- data.frame(names = names,seul = c(seul, interco) ,coul = coul)
dataf$names <- factor(dataf$names, levels = c("intercommunalités", "ALEC/AGEDEN", "Mairie", "« Bouche oreille »",  "Installateur", "Notaire/conformité",
"Presse locale", "Site Internet (préciser)","Autre","Pas de réponse"))
myplot<- ggplot(dataf, aes(x = names, y = seul, fill = coul)) +
geom_bar(stat = "identity") +
scale_fill_identity() + # Utiliser les couleurs spécifiées dans le vecteur 'coul'
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 12)) + # Faire pivoter les étiquettes des axes
labs(title = nom, x = "Noms", y = "Valeurs")
myplot
dataf$names <- factor(dataf$names, levels = c("intercommunalités", "ALEC/AGEDEN", "Mairie", "Bouche oreille",  "Installateur", "Notaire/conformité",
"Presse locale", "Site Internet","Autre","Pas de réponse"))
myplot<- ggplot(dataf, aes(x = names, y = seul, fill = coul)) +
geom_bar(stat = "identity") +
scale_fill_identity() + # Utiliser les couleurs spécifiées dans le vecteur 'coul'
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 12)) + # Faire pivoter les étiquettes des axes
labs(title = nom, x = "Noms", y = "Valeurs")
myplot
df_long <- data[, c("N..dossier", "Connaissance.aide" )] %>%
separate_rows("Connaissance.aide", sep = ";")
df_long <- dummy_cols(df_long, select_columns = "Connaissance.aide", remove_first_dummy = FALSE, remove_selected_columns = TRUE)
df_binary <- df_long %>%
group_by(`N..dossier`) %>%
summarize(across(everything(), max))
names = c("« Bouche oreille »", "ALEC/AGEDEN","Autre","G.A.M", "Installateur", "Grésivaudan",
"Voironnais","Mairie","Notaire/conformité","Pas de réponse", "Presse locale", "Site Internet (préciser)")
names(df_binary) <- c("N° dossier",names)
interco = 0
for(i in c(1:dim(df_binary)[1])){
if(df_binary[i, "G.A.M"] == 1) interco = interco + 1
else if(df_binary[i, "Voironnais"] == 1) interco = interco + 1
else if(df_binary[i, "Grésivaudan"] == 1) interco = interco + 1
}
cont = c()
for(v in names){
for(v2 in names){
cont = c(cont, dim(df_binary[df_binary[,v] == 1 & df_binary[v2] == 1,])[1])
}
}
contingence = matrix(cont, nrow = 12,  ncol = 12)
rownames(contingence) <- names
colnames(contingence) <- names
seul = c()
for(r in setdiff(names, c("G.A.M", "Grésivaudan", "Voironnais"))){
for(c in setdiff(names, c("G.A.M", "Grésivaudan", "Voironnais"))){
if(c==r){
seul = c(seul,contingence[r,c])
}
}
}
nom = "Connaissance.aide"
coul = c(brewer.pal(n = 10, name = 'Paired'))
names = c("Bouche oreille", "ALEC/AGEDEN","Autre", "Installateur",
"Mairie","Notaire/conformité","Pas de réponse", "Presse locale", "Site Internet", "intercommunalités")
dataf <- data.frame(names = names,seul = c(seul, interco) ,coul = coul)
dataf$names <- factor(dataf$names, levels = c("intercommunalités", "ALEC/AGEDEN", "Mairie", "Bouche oreille",  "Installateur", "Notaire/conformité",
"Presse locale", "Site Internet","Autre","Pas de réponse"))
myplot<- ggplot(dataf, aes(x = names, y = seul, fill = coul)) +
geom_bar(stat = "identity") +
scale_fill_identity() + # Utiliser les couleurs spécifiées dans le vecteur 'coul'
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 12)) + # Faire pivoter les étiquettes des axes
labs(title = nom, x = "Noms", y = "Valeurs")
myplot
ggsave(glue("../3_Resultat/graphes/Univariés/Connaissance aide.png"), myplot, device = "png")
# wd_script <- "C:/Users/frederic.bray/Nextcloud/Stage bois bûche Lucas/Projet Bois-buche/scripts/R/"
# wd_data <- "C:/Users/frederic.bray/Nextcloud/Stage bois bûche Lucas/Projet Bois-buche/data/1_Source/"
wd_script <- "C:/Users/gmace/PAB/Projet Bois-buche/scripts/R"
wd_data <- "../../data/1_Source/"
# Load custom scripts to connect the database
setwd(wd_script)
con_encoding <- "UTF-8"
source("R_connect_siddt.R")
source("R_functions.R")
# Lets go to load the datas
setwd(wd_data)
# Get questionnaire data
file <- "Questionnaire.xlsx"
data <- read_excel(file)
file_dico <- "Correspondances_codes_libellés.xlsx"
correspondances <- read_excel(file_dico)
# renommer toutes les colonnes :
names(data) <- c("N° dossier",
"Territoire",
"Sit pro demandeur",
"Sit pro conjoint",
"Age",
"Nb pers ménage",
"Revenus",
"Nature logement",
"Surf chauff logement",
"Période de construction",
"Travaux iso depuis 2005",
"Classe énergétique logement",
"Occupation logement",
"Type Ancien appareil",
"Usage ancien matériel",
"Freq utilisation période chauffe",
"Période utilisation",
"Année installation",
"Type combustible",
"Type combustible autre",
"Qtté bois consommée",
"Qtté bois unité",
"Approvisionnement",
"Appro autre",
"Origine bois",
"Stockage bois",
"Durée séchage bois",
"Type de bois",
"Ramonage installation",
"Fréquence ramonage",
"Fréquence ramonage autre",
"Nouveau matériel",
"Type combustible nouveau materiel",
"Type combustible nouveau matériel autre",
"Usage nouveau matériel",
"Fréquence utilisation période de chauffe nouveau matériel",
"Motivation changement appareil",
"Motivation autre",
"Connaissance aide",
"Connaissance aide site internet",
"Connaissance aide autre")
# Get All Column names to be processed
column_names <- correspondances %>%
distinct(nom_colonne) %>%
pull
add_factors <- function(df, column_name){
# For one column, search all levels and labels
the_codes <- correspondances %>%
filter(nom_colonne == column_name)
# Apply the corresponding factor
df %>%
mutate({{column_name}} := factor(df[[column_name]],
levels = the_codes$code,
labels = the_codes$libellé))
}
data[data["Période utilisation"] == "en soirée,  lorsqu'il fait très froid", "Période utilisation"] <- "en soirée, lorsqu'il fait très froid"
binaires = c("Connaissance aide", "Motivation changement appareil", "Travaux iso depuis 2005", "Période utilisation")
modalités <-  c("« Bouche oreille »", "ALEC/AGEDEN","Autre","G.A.M", "Installateur", "Grésivaudan",
"Voironnais","Mairie","Notaire/conformité","Pas de réponse", "Presse locale", "Site Internet (préciser)",
"Qualité air de mon logement","Économiser du bois/énergie","Économiser de l'argent","Gagner en confort/chaleur",
"Qualité de l'air extérieur","Autre (préciser)","Pas de réponse",
"Aucun","Menuiseries", "Murs / façade","Ne sait pas","Pas de réponse","Plancher bas","Toiture",
"intersaison", "soirée", "journée", "nuit", "matin"," très froid", "Pas réponse"
)
data_binaire = data[,setdiff(names(data), binaires)]
nb <- c(0,12, 19,26,33)
sep = c(";", ";", ", ", ", ")
for(i in 1:4){
df_long <- data[, c("N° dossier", binaires[i])] %>%
separate_rows(binaires[i], sep = sep[i])
df_long <- dummy_cols(df_long, select_columns = binaires[i], remove_first_dummy = FALSE, remove_selected_columns = TRUE)
df_binary <- df_long %>%
group_by(`N° dossier`) %>%
summarize(across(everything(), max))
names = c(modalités[(nb[i]+1):nb[i+1]])
names(df_binary) <- c("N° dossier",names)
data_binaire <- data_binaire %>% left_join( df_binary, by = "N° dossier")
print(names)
cont = c()
for(v in names){
for(v2 in names){
cont = c(cont, dim(df_binary[df_binary[,v] == 1 & df_binary[v2] == 1,])[1])
}
}
contingence = matrix(cont, nrow = nb[i+1] - nb[i],  ncol = nb[i+1] - nb[i])
rownames(contingence) <- names
colnames(contingence) <- names
seul = c()
for(r in names){
for(c in names){
if(c==r){
seul = c(seul,contingence[r,c])
contingence[r,c] = 0
}
}
}
nom = binaires[i]
coul = c(brewer.pal(n = nb[i+1] - nb[i], name = 'Paired'))
dataf <- data.frame(names = names,seul = seul,coul = coul)
if(i == 2){
dataf$names <- factor(dataf$names, levels = c("Qualité air de mon logement","Qualité de l'air extérieur","Économiser du bois/énergie",
"Économiser de l'argent","Gagner en confort/chaleur", "Autre (préciser)","Pas de réponse"))
}
if(i == 4){
dataf$names <- factor(dataf$names, levels = c("matin", "journée","soirée", "nuit", "intersaison", " très froid", "Pas réponse"))
}
myplot<- ggplot(dataf, aes(x = names, y = seul, fill = coul)) +
geom_bar(stat = "identity") +
scale_fill_identity() + # Utiliser les couleurs spécifiées dans le vecteur 'coul'
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 10)) + # Faire pivoter les étiquettes des axes
labs(title = nom, x = "Noms", y = "Valeurs")
ggsave(glue("../3_Resultat/graphes/Univariés/{nom}.png"), myplot, device = "png")
png(glue("../3_Resultat/graphes/Univariés/{nom}_2.png"))
barplot(contingence, col = coul , names = names,  las = 2)
#axis(1, at = 1.2 * 1:(nb[i+1] - nb[i]) -0.5, labels=names,  las = 2)
if(i == 3) {legend("top", legend = names, fill = coul, bg = "transparent")
} else legend("topright", legend = names, fill = coul, bg = "transparent")
dev.off()
}
# Export recoded survey
write_xlsx(data, "../2_Travail/export_questionnaire.xlsx")
data <- read_excel("C:/Users/gmace/PAB/Projet Bois-buche/data/3_Resultat/data_questionnaire_complet.xlsx")
df_long <- data[, c("N..dossier", "Connaissance.aide" )] %>%
separate_rows("Connaissance.aide", sep = ";")
df_long <- dummy_cols(df_long, select_columns = "Connaissance.aide", remove_first_dummy = FALSE, remove_selected_columns = TRUE)
df_binary <- df_long %>%
group_by(`N..dossier`) %>%
summarize(across(everything(), max))
names = c("« Bouche oreille »", "ALEC/AGEDEN","Autre","G.A.M", "Installateur", "Grésivaudan",
"Voironnais","Mairie","Notaire/conformité","Pas de réponse", "Presse locale", "Site Internet (préciser)")
names(df_binary) <- c("N° dossier",names)
interco = 0
for(i in c(1:dim(df_binary)[1])){
if(df_binary[i, "G.A.M"] == 1) interco = interco + 1
else if(df_binary[i, "Voironnais"] == 1) interco = interco + 1
else if(df_binary[i, "Grésivaudan"] == 1) interco = interco + 1
}
cont = c()
for(v in names){
for(v2 in names){
cont = c(cont, dim(df_binary[df_binary[,v] == 1 & df_binary[v2] == 1,])[1])
}
}
contingence = matrix(cont, nrow = 12,  ncol = 12)
rownames(contingence) <- names
colnames(contingence) <- names
seul = c()
for(r in setdiff(names, c("G.A.M", "Grésivaudan", "Voironnais"))){
for(c in setdiff(names, c("G.A.M", "Grésivaudan", "Voironnais"))){
if(c==r){
seul = c(seul,contingence[r,c])
}
}
}
nom = "Connaissance.aide"
coul = c(brewer.pal(n = 10, name = 'Paired'))
names = c("Bouche oreille", "ALEC/AGEDEN","Autre", "Installateur",
"Mairie","Notaire/conformité","Pas de réponse", "Presse locale", "Site Internet", "intercommunalités")
dataf <- data.frame(names = names,seul = c(seul, interco) ,coul = coul)
dataf$names <- factor(dataf$names, levels = c("intercommunalités", "ALEC/AGEDEN", "Mairie", "Bouche oreille",  "Installateur", "Notaire/conformité",
"Presse locale", "Site Internet","Autre","Pas de réponse"))
myplot<- ggplot(dataf, aes(x = names, y = seul, fill = coul)) +
geom_bar(stat = "identity") +
scale_fill_identity() + # Utiliser les couleurs spécifiées dans le vecteur 'coul'
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 12)) + # Faire pivoter les étiquettes des axes
labs(title = nom, x = "Noms", y = "Valeurs")
myplot
ggsave(glue("../3_Resultat/graphes/Univariés/Connaissance aide.png"), myplot, device = "png")
