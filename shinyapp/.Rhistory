column_names_var1 <- column_names_var1 %>% filter(type != "tempo")
couleur_terr <- data.frame(territoire = c("Tous", "CAPV", "GAM", "CCLG"), couleur = c("gray60", "green", "blue", "red"))
column_names_var1 <- column_names_var1 %>% filter(type != "tempo")
column_names_var1 <- column_names_var2 %>% filter(type != "tempo")
column_names_var2 <- column_names %>% filter(type != "qcm")
column_names_var1 <- column_names_var2 %>% filter(type != "tempo")
View(column_names_var1)
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
df = data
var1 = "age"
var2 = "Consommation kwh"
if(vadataif(var1 == var2) get_graph(df, var1, couleur)
if(var1 == var2) get_graph(df, var1, couleur)
else{
column_cara1 <- column_names %>%
filter(id == var1)
column_cara2 <- column_names %>%
filter(id == var2)
if((column_cara1$type == "quali")){
}
else if(column_cara1$type == "quanti" && column_cara2$type == "quanti"){
if((column_cara1$type == "quali" & column_cara2$type == "quali")){
}
View(column_cara2)
column_cara2 <- column_names %>%
filter(id == var2)
var2 = "kwh"
column_cara1 <- column_names %>%
filter(id == var1)
column_cara2 <- column_names %>%
filter(id == var2)
if((column_cara1$type == "quali" & column_cara2$type == "quali")){
}
else if(column_cara1$type == "quanti" & column_cara2$type == "quanti"){
if((column_cara1$type == "quali" & column_cara2$type == "quali")){
}else if(column_cara1$type == "quanti" & column_cara2$type == "quanti"){
}else if(column_cara2 == "tempo"){
if(column_cara1 == "quali"){
}
else{
}
}
if(column_cara1$type == "quali" & column_cara2$type == "quali"){
}else if(column_cara1$type == "quanti" & column_cara2$type == "quanti"){
}else if(column_cara2 == "tempo"){
if(column_cara1 == "quali"){
}
else{
}
}
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
df = data
var1 = "age"
var2 = "kwh"
column_cara1 <- column_names %>%
filter(id == var1)
column_cara2 <- column_names %>%
filter(id == var2)
var_quali = var2
column_cara_quali = column_cara2
var_quanti = var1
column_cara_quanti = column_cara1
if(column_cara1$type == "quali") {
var_quali == var1
column_cara_quali = column_cara1
var_quanti = var2
column_cara_quanti = column_cara2
}
p <- ggplot(df,aes(x = df %>% pull(var_quali), y = df %>% pull(var_quanti))) + geom_boxplot() +
ggtitle(paste(column_cara_quanti$definition, "en fonction de", column_cara_quali$definition) )+  theme(axis.title.x=element_blank()) +
labs(x = column_cara_quali$definition, y = column_cara_quanti$definition)
p
paste(column_cara_quanti$definition, "en fonction de", column_cara_quali$definition
)
var_quali
var_quanti
var1
var2
var_quali = var2
column_cara_quali = column_cara2
var_quanti = var1
column_cara_quanti = column_cara1
var_quali
var_quanti
if(column_cara1$type == "quali"){
var_quali == var1
column_cara_quali = column_cara1
var_quanti = var2
column_cara_quanti = column_cara2
}
var_quanti
var_quali
var_quali <- var2
column_cara_quali = column_cara2
var_quanti <- var1
column_cara_quanti = column_cara1
if(column_cara1$type == "quali"){
var_quali <- var1
column_cara_quali = column_cara1
var_quanti <- var2
column_cara_quanti = column_cara2
}
var_quali
p <- ggplot(df,aes(x = df %>% pull(var_quali), y = df %>% pull(var_quanti))) + geom_boxplot() +
ggtitle(paste(column_cara_quanti$definition, "en fonction de", column_cara_quali$definition) )+  theme(axis.title.x=element_blank()) +
labs(x = column_cara_quali$definition, y = column_cara_quanti$definition)
p
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
df = data
var1 = "nb_pers_menage"
var2 = "kwh"
column_cara1 <- column_names %>%
filter(id == var1)
column_cara2 <- column_names %>%
filter(id == var2)
p <- ggplot(df,aes(x = df %>% pull(var1), y = df %>% pull(var2))) + geom_boxplot() +
ggtitle(paste(column_car1$definition, "en fonction de", column_car2$definition) )+  theme(axis.title.x=element_blank()) +
labs(x = column_car1$definition, y = column_car2$definition)
p <- ggplot(df,aes(x = df %>% pull(var1), y = df %>% pull(var2))) + geom_boxplot() +
ggtitle(paste(column_cara1$definition, "en fonction de", column_cara2$definition) )+  theme(axis.title.x=element_blank()) +
labs(x = column_cara1$definition, y = column_cara2$definition)
p
p <- ggplot(df,aes(x = df %>% pull(var1), y = df %>% pull(var2))) +
ggtitle(paste(column_cara1$definition, "en fonction de", column_cara2$definition) )+  theme(axis.title.x=element_blank()) +
labs(x = column_cara1$definition, y = column_cara2$definition)
p
p <- ggplot(df,aes(x = df %>% pull(var1), y = df %>% pull(var2))) + geom_line() +
ggtitle(paste(column_cara1$definition, "en fonction de", column_cara2$definition) )+  theme(axis.title.x=element_blank()) +
labs(x = column_cara1$definition, y = column_cara2$definition)
p
p <- ggplot(df,aes(x = df %>% pull(var1), y = df %>% pull(var2))) + geom_point() +
ggtitle(paste(column_cara1$definition, "en fonction de", column_cara2$definition) )+  theme(axis.title.x=element_blank()) +
labs(x = column_cara1$definition, y = column_cara2$definition)
p
df = data
var1 = "age"
column_cara1 <- column_names %>%
filter(id == var1)
column_cara2 <- column_names %>%
filter(id == var2)
p <- ggplot(df,aes(x = df %>% pull(var1), y = df %>% pull(var2))) + geom_bar(position = "stack") +
ggtitle(paste(column_cara1$definition, "en fonction de", column_cara2$definition) )+  theme(axis.title.x=element_blank()) +
labs(x = column_cara1$definition, y = column_cara2$definition)
p
p <- ggplot(df,aes(x = df %>% pull(var1), y = df %>% pull(var2))) + geom_bar(position = "stack")
p
p <- ggplot(df,aes(x = df %>% pull(var1), fill = df %>% pull(var2))) + geom_bar(position = "stack") +
ggtitle(paste(column_cara1$definition, "en fonction de", column_cara2$definition) )+  theme(axis.title.x=element_blank()) +
labs(x = column_cara1$definition, y = column_cara2$definition)
p
p <- ggplot(df,aes_string(x = var1, fill = var2)) + geom_bar(position = "stack") +
ggtitle(paste(column_cara1$definition, "en fonction de", column_cara2$definition) )+  theme(axis.title.x=element_blank()) +
labs(x = column_cara1$definition, y = column_cara2$definition)
p
p <- ggplot(df,aes_string(x = var1, fill = var2)) + geom_bar(position = "stack")
p
p <- ggplot(df, aes_string(x = var1, color = var2)) + geom_bar(position = "stack") +
ggtitle(paste(column_cara1$definition, "en fonction de", column_cara2$definition) )+  theme(axis.title.x=element_blank()) +
labs(x = column_cara1$definition, y = column_cara2$definition)
p
p <- ggplot(df, aes_string(x = var1, colour = var2)) + geom_bar(position = "stack") +
ggtitle(paste(column_cara1$definition, "en fonction de", column_cara2$definition) )+  theme(axis.title.x=element_blank()) +
labs(x = column_cara1$definition, y = column_cara2$definition)
p
p <- ggplot(df, aes_string(x = var1, fill = var2, group = var2)) + geom_bar(position = "stack") +
ggtitle(paste(column_cara1$definition, "en fonction de", column_cara2$definition) ) +  theme(axis.title.x=element_blank()) +
labs(x = column_cara1$definition, y = column_cara2$definition)
p
var1 = "age"
var2 = "sit_pro_conjoint"
column_cara1 <- column_names %>%
filter(id == var1)
column_cara2 <- column_names %>%
filter(id == var2)
p <- ggplot(df, aes_string(x = var1, fill = var2)) + geom_bar(position = "stack") +
ggtitle(paste(column_cara1$definition, "en fonction de", column_cara2$definition) ) +  theme(axis.title.x=element_blank()) +
labs(x = column_cara1$definition, y = column_cara2$definition)
p
df = data
var1 = "age"
var2 = "dossier_recu"
df %>%
group_by(var2, var1) %>%
summarise(n = n())
df %>%
group_by(pull(var2), pull(var1)) %>%
summarise(n = n())
df[,var2] <- format(df[,"var2"], "%Y")
df[,var2] <- format(df[,var2], "%Y")
df[,"var2"]
df[,var2]
df <- data[ data[,var2] >= "2016-01-01" &  data[,var2] < "2024-01-01" & !is.na( data[,var2]),]
View(df)
ggplot(aes(x = var2, y = var1)) + geom_bar(position = "stack")
ggplot(df, aes(x = var2, y = var1)) + geom_bar(position = "stack")
ggplot(df, aes(x = var2, y = var1)) + geom_bar(position = "count")
ggplot(df, aes(x = var2, y = var1)) + geom_bar(stat = 'count')
df %>%
group_by(across(all_of(c(var2, var1)))) %>%
summarise(n = n())
df <- data[ data[,var2] >= "2016-01-01" &  data[,var2] < "2024-01-01" & !is.na( data[,var2]),]
df[,var2] <- format(df[,var2], "%Y")
df %>%
group_by(across(all_of(c(var2, var1)))) %>%
summarise(n = n())
ggplot(df,aes(x = var2, y =  n, group = var1, color = var1)) +
geom_point() + geom_line()
df %>%
group_by(across(all_of(c(var2, var1)))) %>%
summarise(n = n())
ggplot(df,aes(x = var2, y =  n, group = var1, color = var1)) +
geom_point() + geom_line()
df %>%
group_by(across(all_of(c(var2, var1)))) %>%
summarise(n = n()) %>%
ggplot(df,aes(x = var2, y =  n, group = var1, color = var1)) +
geom_point() + geom_line()
df %>%
group_by(across(all_of(c(var2, var1)))) %>%
summarise(n = n()) %>%
ggplot(aes(x = var2, y =  n, group = var1, color = var1)) +
geom_point() + geom_line()
df %>%
group_by(across(all_of(c(var2, var1)))) %>%
summarise(n = n())
df %>%
group_by(across(all_of(c(var2, var1)))) %>%
summarise(n = n()) %>%
ggplot(aes(x = across(all_of(var2)), y =  n, group = across(all_of(var1)), color = across(all_of(var1)))) +
geom_point() + geom_line()
df %>%
group_by(across(all_of(c(var2, var1)))) %>%
summarise(n = n()) %>%
ggplot(aes(x = pull(var2), y =  n, group = pull(var1), color = pull(var1))) +
geom_point() + geom_line()
df %>%
group_by(across(all_of(c(var2, var1)))) %>%
summarise(n = n()) %>%
ggplot(aes(x = df %>% pull(var2), y =  n, group = df %>% pull(var1), color = df %>% pull(var1))) +
geom_point() + geom_line()
df <- df %>%
group_by(across(all_of(c(var2, var1)))) %>%
summarise(n = n())
ggplot(df, aes(x = df %>% pull(var2), y =  n, group = df %>% pull(var1), color = df %>% pull(var1))) +
geom_point() + geom_line()
ggplot(df, aes(x = var2, y = var1)) + geom_bar(stat = 'count') +
labs(x = column_cara2$definition, color = column_cara2$definition, y = "Nombre de dossiers")
ggplot(df, aes(x = var2, y = var1)) + geom_bar(stat = 'count')
ggplot(df, aes(x = df %>% pull(var2), y =  n, group = df %>% pull(var1), color = df %>% pull(var1))) +
geom_point() + geom_line() +
labs(x = column_cara2$definition, color = column_cara2$definition, y = "Nombre de dossiers")
ggplot(df, aes(x = df %>% pull(var2), y =  n, group = df %>% pull(var1), color = df %>% pull(var1))) +
geom_point() + geom_line() +
labs(x = column_cara2$definition, color = column_cara1$definition, y = "Nombre de dossiers")
df <- data[ data[,var2] >= "2016-01-01" &  data[,var2] < "2024-01-01" & !is.na( data[,var2]),]
df[,var2] <- format(df[,var2], "%Y")
var1 = "nb_pers_menage"
var2 = "dossier_recu"
else{
var_quali <- var2
column_cara1 <- column_names %>%
filter(id == var1)
column_cara2 <- column_names %>%
filter(id == var2)
df <- df %>%
group_by(across(all_of(c(var2, var1)))) %>%
summarise(n = mean(var1))
View(df)
df <- df %>%
group_by(across(all_of(c(var2)))) %>%
summarise(n = mean(var1))
View(df)
df <- data[ data[,var2] >= "2016-01-01" &  data[,var2] < "2024-01-01" & !is.na( data[,var2]),]
df[,var2] <- format(df[,var2], "%Y")
df <- df %>%
group_by(across(all_of(c(var2)))) %>%
summarise(moy = mean(across(all_of(c(var2)))))
df <- data[ data[,var2] >= "2016-01-01" &  data[,var2] < "2024-01-01" & !is.na( data[,var2]),]
df[,var2] <- format(df[,var2], "%Y")
df <- df %>%
group_by(across(all_of(c(var2)))) %>%
summarise(moy = mean(var1))
df <- data[ data[,var2] >= "2016-01-01" &  data[,var2] < "2024-01-01" & !is.na( data[,var2]),]
df[,var2] <- format(df[,var2], "%Y")
df <- df %>%
group_by(across(all_of(c(var2))))
View(df)
df <- df %>%
group_by(across(all_of(c(var2)))) %>%
summarise(moy = mean(nb_pers_menage))
View(df)
df <- df %>%
group_by(across(all_of(c(var2)))) %>%
summarise(moy = mean(all_of(var1)))
df <- data[ data[,var2] >= "2016-01-01" &  data[,var2] < "2024-01-01" & !is.na( data[,var2]),]
df[,var2] <- format(df[,var2], "%Y")
df <- df %>%
group_by(across(all_of(c(var2)))) %>%
summarise(moy = mean(all_of(var1)))
df
df <- data[ data[,var2] >= "2016-01-01" &  data[,var2] < "2024-01-01" & !is.na( data[,var2]),]
df[,var2] <- format(df[,var2], "%Y")
df <- df %>%
group_by(across(all_of(c(var2)))) %>%
summarise(moy = mean(across(var1)))
dplyr::last_dplyr_warnings()
df
df <- data[ data[,var2] >= "2016-01-01" &  data[,var2] < "2024-01-01" & !is.na( data[,var2]),]
df[,var2] <- format(df[,var2], "%Y")
df <- df %>%
group_by(across(all_of(c(var2)))) %>%
summarise(moy = mean(!!sym(var1)))
df
ggplot(df, aes(x = df %>% pull(var2), y =  df %>% pull(var1))) +
geom_point() + geom_line() +
labs(x = column_cara2$definition,  y = paste("Moyenne de : ", column_cara1$definition))
df <- df %>%
group_by(across(all_of(c(var2)))) %>%
summarise(moy = mean(!!sym(var1)))
df <- data[ data[,var2] >= "2016-01-01" &  data[,var2] < "2024-01-01" & !is.na( data[,var2]),]
df[,var2] <- format(df[,var2], "%Y")
df <- df %>%
group_by(across(all_of(c(var2)))) %>%
summarise(moy = mean(!!sym(var1)))
ggplot(df, aes(x = df %>% pull(var2), y =  moy)) +
geom_point() + geom_line() +
labs(x = column_cara2$definition,  y = paste("Moyenne de : ", column_cara1$definition))
ggplot(df, aes(x = df %>% pull(var2), y =  moy)) +
geom_line() +
labs(x = column_cara2$definition,  y = paste("Moyenne de : ", column_cara1$definition))
df <- data[ data[,var2] >= "2016-01-01" &  data[,var2] < "2024-01-01" & !is.na( data[,var2]),]
df[,var2] <- format(df[,var2], "%Y")
df
df <- df %>%
group_by(across(all_of(c(var2, territoire)))) %>%
summarise(moy = mean(!!sym(var1)))
df <- df %>%
group_by(across(all_of(c(var2, "territoire")))) %>%
summarise(moy = mean(!!sym(var1)))
df
ggplot(df, aes(x = df %>% pull(var2), y =  moy, group = territoire, fill = territoire)) +
geom_point() + geom_line() +
labs(x = column_cara2$definition,  y = paste("Moyenne de : ", column_cara1$definition))
ggplot(df, aes(x = df %>% pull(var2), y =  moy, group = territoire, color = territoire)) +
geom_point() + geom_line() +
labs(x = column_cara2$definition,  y = paste("Moyenne de : ", column_cara1$definition))
ggplot(df, aes(x = df %>% pull(var2), y =  moy, group = territoire, color = territoire)) +
geom_point() + geom_line() +
scale_color_manual(values = c("GAM" = "blue", "CCLG" = "red", "CAPV" = "green")) +
labs(x = column_cara2$definition,  y = paste("Moyenne de : ", column_cara1$definition))
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
df = data
var1 = "nb_pers_menage"
var2 = "dossier_recu"
df <- df %>% df[!is.na(df[, var1])]
df <- df %>% df[!is.na(df[, var1]),]
df[, var1]
!is.na(df[, var1])
df[!is.na(df[, var1]),]
df <- df %>% df[!is.na(df[, var1]),]
df <- df[!is.na(df[, var1]),]
df <- data[ data[,var2] >= "2016-01-01" &  data[,var2] < "2024-01-01" & !is.na( data[,var2]),]
df[,var2] <- format(df[,var2], "%Y")
df <- df[!is.na(df[, var1]),] %>%
group_by(across(all_of(c(var2, "territoire")))) %>%
summarise(moy = mean(!!sym(var1)))
p <- ggplot(df, aes(x = var2, y =  moy, group = territoire, color = territoire)) +
geom_point() + geom_line() +
scale_color_manual(values = c("GAM" = "blue", "CCLG" = "red", "CAPV" = "green")) +
labs(x = column_cara2$definition,  y = paste("Moyenne de : ", column_cara1$definition))
p
df <- data[ data[,var2] >= "2016-01-01" &  data[,var2] < "2024-01-01" & !is.na( data[,var2]),]
df[,var2] <- format(df[,var2], "%Y")
df <- df[!is.na(df[, var1]),] %>%
group_by(across(all_of(c(var2, "territoire")))) %>%
summarise(moy = mean(!!sym(var1)))
df
p <- ggplot(df, aes_string(x = var2, y =  "moy", group = "territoire", color = "territoire")) +
geom_point() + geom_line() +
scale_color_manual(values = c("GAM" = "blue", "CCLG" = "red", "CAPV" = "green")) +
labs(x = column_cara2$definition,  y = paste("Moyenne de : ", column_cara1$definition))
p
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
shiny::runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
shiny::runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
shiny::runApp('C:/Users/gmace/PAB/Projet Bois-buche/shinyapp')
# write_xlsx(data , "www/data/data.xlsx")
# enquete <- enquete %>%
#   clean_names()
#
#
# data[ data$date_refus == "NaN",]$date_refus <- NA
# write.csv(data, "www/data/data.csv")
# write.csv(enquete, "www/data/Enquête qualitative.csv")
# write.csv(dico, "www/data/dico.csv")
# T1<-Sys.time()
data <- read.csv("www/data/data.csv")
setwd("C:/Users/gmace/PAB/Projet Bois-buche/shinyapp/www")
setwd("C:/Users/gmace/PAB/Projet Bois-buche/shinyapp")
# write_xlsx(data , "www/data/data.xlsx")
# enquete <- enquete %>%
#   clean_names()
#
#
# data[ data$date_refus == "NaN",]$date_refus <- NA
# write.csv(data, "www/data/data.csv")
# write.csv(enquete, "www/data/Enquête qualitative.csv")
# write.csv(dico, "www/data/dico.csv")
# T1<-Sys.time()
data <- read.csv("www/data/data.csv")
enquete <- read.csv("www/data/Enquête qualitative.csv")
dico <- read.csv("www/data/dico.csv")
data$revenus <- factor(data$revenus, levels = c("Pas de réponse", "Moins de 20 000 €", "20 000 à 30 000 €", "30 000 à 40 000 €",
"40 000 à 50 000 €","50 000 à 60 000 €", "60 000 à 70 000 €", "70 000 à 80 000 €",
"80 000 à 90 000 €", "Plus de 100 000 €"))
data$usage_ancien_materiel <- factor(data$usage_ancien_materiel, levels = c("Chauffage principal", "Chauffage d'appoint",
"Plaisir / agrément",  "Pas de réponse"))
data$usage_nouveau_materiel <- factor(data$usage_nouveau_materiel, levels = c("Chauffage principal", "Chauffage d'appoint",
"Plaisir / agrément",  "Pas de réponse"))
data$freq_utilisation_période_chauffe <- factor(data$freq_utilisation_période_chauffe, levels = c("Tous les jours", "3 à 4 jours / semaine", "1 à 2 jours / semaine",
"1 à 3 jours / mois", "moins souvent", "Jamais", "Pas de réponse"))
data$freq_utilisation_periode_chauffe <- factor(data$freq_utilisation_periode_chauffe, levels = c("Tous les jours", "3 à 4 jours / semaine", "1 à 2 jours / semaine",
"1 à 3 jours / mois", "moins souvent", "Jamais", "Pas de réponse"))
data$duree_sechage_bois <- factor(data$duree_sechage_bois, levels =c("<1an", "1-2 ans", "> 2 ans", "Ne sait pas", "Pas de réponse"))
unique(data$age)
unique(data$nature_logement)
unique(data$periode_de_construction)
unique(data$frequence_ramonage)
# T1<-Sys.time()
# data <- read_excel("www/data/data.xlsx")
# enquete <- read_excel("www/data/Enquête qualitative.xlsx")
dico <- read_excel("www/data/dico.xlsx")
library(readxl)
library(writexl)
# T1<-Sys.time()
# data <- read_excel("www/data/data.xlsx")
# enquete <- read_excel("www/data/Enquête qualitative.xlsx")
dico <- read_excel("www/data/dico.xlsx")
write.csv(dico, "www/data/dico.csv")
# write_xlsx(data , "www/data/data.xlsx")
# enquete <- enquete %>%
#   clean_names()
#
#
# data[ data$date_refus == "NaN",]$date_refus <- NA
# write.csv(data, "www/data/data.csv")
# write.csv(enquete, "www/data/Enquête qualitative.csv")
# write.csv(dico, "www/data/dico.csv")
# T1<-Sys.time()
data <- read.csv("www/data/data.csv")
enquete <- read.csv("www/data/Enquête qualitative.csv")
dico <- read.csv("www/data/dico.csv")
View(dico)
shiny::runApp()
unique(data$frequence_utilisation_periode_de_chauffe_nouveau_materiel)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
