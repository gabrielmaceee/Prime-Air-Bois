# This is the server logic of a Shiny web application. You can run the
# application by clicking 'Run App' above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#




# Define server logic required to draw a histogram
shinyServer(function(input, output) {
    output$distPlot <- renderPlotly({
      territoire_name <- input$un_territoire
      column_name <- column_names[column_names$name == input$column_name,]$id
      
      if(territoire_name == "Tous"){filter_data <- data}
      else{filter_data <- data %>%
        filter(territoire == territoire_name)}
      
        couleur = couleur_terr %>% filter(territoire == territoire_name)
        get_graph(filter_data, column_name, couleur$couleur)
    })
    output$cartographie <- renderLeaflet({
      carto()
      })
    output$evo_demande <- renderPlotly({ # ajouter des volets deroulants avec des annÃ©es ?
          demande_territoire()
    })
    output$evo_majoration <- renderPlotly({
      taux_majoration()
    })
    
    output$evo_revenus <- renderPlotly({
      territoire_name <- input$un_territoire
      evo_revenus(territoire_name)
    })
    
    output$montant_aide <- renderPlotly({
      aide_terr()
    })
    output$somme_aide<- renderPlotly({
      somme_des_aides()
    })
    
    output$changement_type <- renderPlotly({
      changement_app()
    })
    
    output$chgt_usage <- renderPlotly({
      changement_usage()
    })
    
    output$evo_combu <- renderPlotly({
      evo_combustible()
    })
    
    output$evo_conso <- renderPlot({
      evo_conso()
    })

})






