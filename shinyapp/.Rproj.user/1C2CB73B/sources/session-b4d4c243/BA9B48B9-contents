---
title: "AFDM_buche"
author: "Gabriel Macé"
date: "2024-07-17"
output: html_document
---




```{r}
library(FactoMineR)
library(factoextra)
library(readxl)
library(tidyr)
library(dplyr)
library(stats)
library(missMDA)
library(corrplot)
library(ggplot2)
```

```{r}
setwd("C:/Users/gmace/PAB/Projet Bois-buche/script R Gabriel")
data <- read_excel("../data/3_Resultat/data_questionnaire_complet.xlsx")
data <- data[!data$Type.Ancien.appareil %in% c("Chaudière","Cuisinière"),]
data[data$Nouveau.matériel %in% c("Poêle de masse", "Poêle hydraulique"),]$Nouveau.matériel <- "Poêle"
data <- data[!data$Nouveau.matériel %in% c("Chaudière","Cuisinière"),]
# data <- data[!is.na(data$dossier_reçu),]
data <- data %>% filter(Type.combustible.nouveau.materiel == "Bûche")
data <- data[!is.na(data$dossier_reçu),]
#data <- data[data$dossier_reçu > "2022-03-01",]

# binaire <- read_excel("../data/2_Travail/export_questionnaire_binaire.xlsx")
# binaire <- binaire[binaire$`N° dossier` %in% data$N..dossier,]
# binaire <- binaire[,c(1,50:54)]
# binaire <- binaire[!duplicated(binaire$`N° dossier`),c(1,2:6)]
# # regrouper certaines modalités de la raison du changement d'appareil
# binaire$`Qualité_air` <- binaire$`Qualité air de mon logement` + binaire$`Qualité de l'air extérieur`
# binaire[binaire$`Qualité_air` == 2,]$`Qualité_air` <- 1
# binaire$économiser <- binaire$`Économiser de l'argent` + binaire$`Économiser du bois/énergie`
# binaire[binaire$économiser == 2,]$économiser <- 1
# binaire <- binaire[, c(1,5,7:8)]

types_communes <- read_excel("../data/types_communes.xlsx", sheet = 4, skip = 2, col_names = TRUE)
names(types_communes) <- c("insee_com", "type_commune")
types_communes$type_commune <- factor(types_communes$type_commune, levels = c("rural autonome très peu dense", "rural autonome peu dense",  "rural sous faible influence d'un pôle", "rural sous forte influence d'un pôle", "urbain densité intermédiaire", "urbain dense"))
#data <- left_join(data, binaire, by = join_by("N..dossier" == "N° dossier"))
data <- left_join(data, types_communes, by = "insee_com")

```

Ajouter les clusters des communes ?

```{r}
for(cate in c("Employé.e", "Cadre", "Autre,sans activité", "Retraité.e", "Ouvrier.ère", "Artisan.e, commerçant.s, chef.fe d'entreprise", "Profession intermédiaire", "Agriculteur.rice exploitant.e")){
  data[,cate] <- rep(0, dim(data)[1])
  data[data$Sit.pro.conjoint == cate | data$Sit.pro.demandeur == cate, cate] <- 1
}
```

```{r}
# a_enlever <-c("Classe.énergétique.logement", "Type.combustible.autre", "Qtté.bois.consommée", "Qtté.bois.unité", "Appro.autre", "Origine.bois", "Fréquence.ramonage.autre", "Type.combustible.nouveau.matériel.autre", "Fréquence.utilisation.période.de.chauffe.nouveau.matériel", "Motivation.autre", "Connaissance.aide.site.internet", "Connaissance.aide.autre", "insee_com", "kwh", "transfert_facture","dossier_reçu")
# a_enlever = c(a_enlever, "équivalent_steres", "Nature.logement", "Occupation.logement", "Stockage.bois", "Type.combustible", "adresse_ville", "Motivation.changement.appareil", "Connaissance.aide", "Travaux.iso.depuis.2005", "Période.utilisation", "Sit.pro.demandeur", "Sit.pro.conjoint", "Surf.chauff.logement", "Fréquence.ramonage", "Ramonage.installation","Type.de.bois", "cout_appareil")
# #"Année.installation",  "Revenus",  "montant_aide")
# # faire un afc pour motivation changement appareil ? 
# data_afmd <- data[,setdiff(names(data), a_enlever)]


utilisation = c("Type.Ancien.appareil", "Usage.ancien.matériel", "Nouveau.matériel", "Usage.nouveau.matériel","cout_total_TTC", "type_commune", "majoration", "Territoire", "montant_aide", 
                # "économiser", "Gagner en confort/chaleur", "Qualité_air", 
                # variable ajoutées après : 
                 "Revenus", "Age", "Nb.pers.ménage", "Freq.utilisation.période.chauffe", "Année.installation", "Durée.séchage.bois", "Approvisionnement", "Stockage.bois", "Ramonage.installation", "cluster_com",
                "Employé.e", "Cadre", "Autre,sans activité", "Retraité.e", "Ouvrier.ère", "Artisan.e, commerçant.s, chef.fe d'entreprise", "Profession intermédiaire", "Agriculteur.rice exploitant.e"
                # "Sit.pro.demandeur", "Sit.pro.conjoint"
                # ,"refusé"
                )
data_afmd <- na.omit(data[,utilisation])# tranche de revenu, catégorie sp 2,
```

```{r}
# data_sans_na <- imputeFAMD(data_afmd, ncp = 10)
```

```{r}
for(v in c("cout_total_TTC","montant_aide", "Nb.pers.ménage")){
  data_afmd[,v] <- as.numeric(data_afmd %>% pull (v))
}
```

# amélioration AFDM : centrer réduire, sélectionner les variables, faire plusieurs ACP selon une variable
```{r}
res.afdm<- FAMD(na.omit(data_afmd), sup.var = c("Territoire", "montant_aide", "cluster_com"), graph = FALSE, ncp = 54)
```



```{r}
eig.val <- get_eigenvalue(res.afdm)
head(eig.val,100)
```



```{r}
#La fonction fviz_eig() ou fviz_screeplot() [factoextra] peut être utilisée pour visualiser les proportions de variances expliquées par les différents axes:
fviz_screeplot(res.afdm)
```


```{r}
var = get_famd_var(res.afdm)
corrplot(var$contrib[,1:20], is.corr = FALSE) 
corrplot(var$cos2[,1:20], is.corr = FALSE) # qualité de représentation
fviz_contrib(res.afdm, choice = "var", axes = c(1,2))
fviz_cos2(res.afdm, choice = "var", axes = c(1,2))
```


```{r}
fviz_contrib(res.afdm, choice = "var", axes = c(1:54))
```

```{r}
fviz_famd_ind(res.afdm, habillage = "Territoire", palette = c("green","red", "blue"), geom = c("point"))
# capv = en dernier donc se mettent au desus des autres
```

```{r}
fviz_famd_var(res.afdm, col.var = "bisque4", label = c( "var"), repel = TRUE)
```

## Clustering :
### Clustering ascendant hiérarchique : 

```{r}
hc <- hclust(dist(res.afdm$ind$coord), method = "ward.D")
plot(hc)
rect.hclust(hc,k=2)
memb <- as.factor(cutree(hc, k = 2))
fviz_famd_ind(res.afdm, habillage =  memb, label = c( "var"), palette = c("#0073C2FF", "#EFC000FF", "#868686FF","#FC4E07", "green", "orange", "pink"), legend.title = "Cluster",addEllipses = FALSE)

hc <- hclust(dist(res.afdm$ind$coord), method = "ward.D2")
plot(hc)
rect.hclust(hc,k=2)
memb <- as.factor(cutree(hc, k = 2))
fviz_famd_ind(res.afdm, habillage = memb, palette = c("#0073C2FF", "#EFC000FF", "#868686FF","#FC4E07", "green", "orange", "pink"), legend.title = "Cluster",addEllipses = FALSE, label = c( "var"),)
```
```{r}
set.seed(3)
res.km <- kmeans(res.afdm$ind$coord, centers = 5, nstart = 25) # dim 1 qui sépare
grp <- as.factor(res.km$cluster)
summary(grp)
# Colorer les variables par groupes
fviz_famd_ind(res.afdm, habillage = grp, palette = c("#0073C2FF", "#EFC000FF", "#868686FF","#FC4E07", "green", "orange", "pink"), legend.title = "Cluster",addEllipses = FALSE, geom = c("point"), axes = c(1,2)) 
```

```{r}
set.seed(3)
res.km <- kmeans(res.afdm$ind$coord, centers = 2, nstart = 25) # dim 1 qui sépare
grp <- as.factor(res.km$cluster)
summary(grp)
# Colorer les variables par groupes
fviz_famd_ind(res.afdm, habillage = grp, palette = c("#0073C2FF", "#EFC000FF", "#868686FF","#FC4E07", "green", "orange", "pink"), legend.title = "Cluster",addEllipses = FALSE, geom = c("point"), axes = c(1,2)) 

for( v in setdiff(utilisation, c("cout_total_TTC","montant_aide", "Nb.pers.ménage") )){
  print(v)
  t = t(addmargins(table(grp, data_afmd %>% pull(v))))
  t = t / t[,3]
  print(round(t[- dim(t)[1],1:2],2))
}

for( v in c("cout_total_TTC","montant_aide", "Nb.pers.ménage")){
  print(v)
  print("Groupe 1 : ")
  print(mean(data_afmd[grp == 1, ] %>% pull(v)))
  print("Groupe 2 : ")
  print(mean(data_afmd[grp == 2, ] %>% pull(v)))
}
```

A chaque fois un groupe de ~380 individus se demarque



```{r}
set.seed(3)
res.km <- kmeans(res.afdm$ind$coord, centers = 3, nstart = 25) # séparation dim 1 et 2
grp <- as.factor(res.km$cluster)
summary(grp)
# Colorer les variables par groupes
fviz_famd_ind(res.afdm, habillage = grp, palette = c("#0073C2FF", "#EFC000FF", "#868686FF","#FC4E07", "green", "orange", "pink"), legend.title = "Cluster",addEllipses = FALSE, geom = c("point"), axes = c(1,2)) 


for( v in setdiff(utilisation, c("cout_total_TTC","montant_aide", "Nb.pers.ménage") )){
  print(v)
  t = t(addmargins(table(grp, data_afmd %>% pull(v))))
  t = t / t[,4]
  print(round(t[- dim(t)[1],1:3],2))
}

for( v in c("cout_total_TTC","montant_aide", "Nb.pers.ménage")){
  print(v)
  print("Groupe 1 : ")
  print(mean(data_afmd[grp == 1, ] %>% pull(v)))
  print("Groupe 2 : ")
  print(mean(data_afmd[grp == 2, ] %>% pull(v)))
  print("Groupe 3 : ")
  print(mean(data_afmd[grp == 3, ] %>% pull(v)))
}
```




```{r}
# Créez une variable de regroupement en utilisant kmeans
set.seed(4)
res.km <- kmeans(res.afdm$ind$coord, centers = 4, nstart = 25)
grp <- as.factor(res.km$cluster)
summary(grp)
# Colorer les variables par groupes
fviz_famd_ind(res.afdm, habillage = grp, palette = c("#0073C2FF", "#EFC000FF", "#868686FF","#FC4E07", "green", "orange", "pink"), legend.title = "Cluster",addEllipses = FALSE, geom = c("point"), axes = c(1,2))

# Sans prendre en comlpte le cluster "Pas de réponse" :
for( v in setdiff(utilisation, c("cout_total_TTC","montant_aide", "Nb.pers.ménage") )){
  print(v)
  t = t(addmargins(table(grp, data_afmd %>% pull(v))))
  t = t(t) / t[dim(t)[1],]
  print(round(t[1:3,- dim(t)[2]],2))
}

for( v in c("cout_total_TTC","montant_aide", "Nb.pers.ménage")){
  print(v)
  print("Groupe 1 : ")
  print(mean(data_afmd[grp == 1, ] %>% pull(v)))
  print("Groupe 2 : ")
  print(mean(data_afmd[grp == 2, ] %>% pull(v)))
  print("Groupe 3 : ")
  print(mean(data_afmd[grp == 3, ] %>% pull(v)))
}
```



