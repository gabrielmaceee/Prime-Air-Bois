---
title: "Analyse graphique"
author: "Gabriel Macé"
date: "2024-05-27"
output:
  html_document: default
  word_document: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo=FALSE, warning= FALSE)
```

```{r}
library(readxl)
library(writexl)
library(dplyr)
library(stringr)
library(sf)
library(ggplot2)
library(purrr)
library(forcats)
library(glue)
library(janitor)
library(wordcloud)
library(tm)
library(tidyr)
data <- read_excel("../data/3_Resultat/data_questionnaire_complet.xlsx")[-1]
enquete <- read_excel("../data/1_Source/Enquête qualitative.xlsx")
```

```{r,include=FALSE}
FABG <- read_excel("../data/1_Source/Traitement données FABG.xlsx", sheet = "BD", col_names = TRUE)
FABV <- read_excel("../data/1_Source/Traitement données FABV.xlsx", sheet = "BD", col_names = TRUE)
FABVR <- read_excel("../data/1_Source/Traitement données FABVR.xlsx", sheet = "BD", col_names = TRUE)
FABM <- read_excel("../data/1_Source/Traitement données FABM.xlsx", sheet = "BD", col_names = TRUE)[1:2320,-1]
FABM2 <- read_excel("../data/1_Source/Traitement données FABM.xlsx", sheet = "BD", col_names = TRUE)[2321:3961,-1]
names(FABV) <- FABV[3,]
FABV <- FABV[-c(1:4),]
names(FABVR) <- FABVR[2,]
FABVR <- FABVR[-c(1:3),]
names(FABG) <- FABG[1,]
FABG <- FABG[-1,]
names(FABG)[4] <- "dossier_reçu"
names(FABV)[4] <- "dossier_reçu"
names(FABVR)[4] <- "dossier_reçu"
names(FABM)[6] <- "dossier_reçu"
names(FABM2)[8] <- "dossier_reçu"
#names(FABG)[21]<- "transfert_facture"

FABG <- FABG[,c("numero_dossier","dossier_reçu")]
FABM <- FABM[,c("numero_dossier","dossier_reçu")]
FABM2 <- FABM2[,c("numero_dossier","dossier_reçu")]
FABV <- FABV[,c("numero_dossier","dossier_reçu")]
FABVR <- FABVR[,c("numero_dossier","dossier_reçu")]


FABG[,"dossier_reçu"] <- openxlsx::convertToDate(FABG  %>% pull("dossier_reçu"))
FABM2[,"dossier_reçu"] <- openxlsx::convertToDate(FABM2  %>% pull("dossier_reçu"))
FABV[,"dossier_reçu"] <- openxlsx::convertToDate(FABV  %>% pull("dossier_reçu"))
FABVR[,"dossier_reçu"] <- openxlsx::convertToDate(FABVR  %>% pull("dossier_reçu"))


test <- rbind(FABG, FABV, FABVR, FABM, FABM2)

res <- sort(test$dossier_reçu)[-1]
res_V <- sort(c(FABV$dossier_reçu, FABVR$dossier_reçu))
res_G <- sort(FABG$dossier_reçu)[-1]
res_M <- sort(c(FABM$dossier_reçu, FABM2$dossier_reçu))

```

```{r}
# evolution du nombre de dossier par territoire:

plot(table(format(res_M, "%m")), ylab = "", type = "l", col ="blue", main = "évolution du nombre de demande par mois par territoire")
lines(table(format(res_G, "%m")), type = "l", col ="red")
lines(table(format(res_V, "%m")), type = "l", col ="green")
legend("topleft", legend=c("Grenoble Métropole", "Grésivaudan", "Pays Voironnais"),
       col=c("blue", "red", "green"), lty=1, cex=0.8, bg="transparent")

plot(table(format(res_M, "%Y"))[-c(1,10)], type = "l", col ="blue", main = "évolution du nombre de demande par an par territoire")
lines(table(format(res_G, "%Y"))[-c(1,10)], type = "l", col ="red")
lines(table(format(res_V, "%Y"))[-9], type = "l", col ="green")
legend("topleft", legend=c("Grenoble Métropole", "Grésivaudan", "Pays Voironnais"),
       col=c("blue", "red", "green"), lty=1, cex=0.8,  bg="transparent")

plot(table(format(res_V, "%Y"))[-9]/ length(res_V[-9]), type = "l", col ="green", main = "évolution de la demande / demande totale par territoire")
lines(table(format(res_G, "%Y"))[-c(1,10)]/ length(res_G[-c(1,2)]), type = "l", col ="red")
lines(table(format(res_M, "%Y"))[-10]/ length(res_M[-10]), type = "l", col ="blue")
legend(2016, 0.05, legend=c("Grenoble Métropole", "Grésivaudan", "Pays Voironnais"),
       col=c("blue", "red", "green"), lty=1, cex=0.8)


plot(100 * table(format(data[data$Territoire == "CAPV" & data$refusé,]$dossier_reçu, "%Y"))[-9] / table(format(data[data$Territoire == "CAPV",]$dossier_reçu, "%Y"))[-9], type = "l", col ="green",
     ylim = c(0, 20), main = "évolution du pourcentage de dossiers refusés")
lines(100 * table(format(data[data$Territoire == "CCLG" & data$refusé,]$dossier_reçu, "%Y"))[-c(1)] / table(format(data[data$Territoire == "CCLG",]$dossier_reçu, "%Y"))[-c(1,2)], type = "l", col ="red")
t <- table(format(data[data$Territoire == "GAM" & data$refusé,]$dossier_reçu, "%Y"))[-c(1)]
t2 <- as.vector(t)
names(t2) <- names(t)
t2 <- c(t2, "2020" = 0)
sorted_indices <- sort(names(t2))
t2 <- t2[sorted_indices]
t <- as.table(t2)
lines(100 * t / table(format(data[data$Territoire == "GAM",]$dossier_reçu, "%Y"))[-c(1,10)], type = "l", col ="blue")
legend("topright", legend=c("Grenoble Métropole", "Grésivaudan", "Pays Voironnais"),
       col=c("blue", "red", "green"), lty=1, cex=0.8)
```

Clairement les mois d'automne sont la où il y a le plus de demande

Il semble y avoir deux crises : 2020 / 2023 -> peut être pas tous les dossiers finis, PV moins sensible en 2020

PV : meilleures années = 2021/2022

GG : meilleures années : 2019/2022

PV: 2018 : un peu moins de dossiers accétpés par rapport à la demande, sinon tous > 0.8

```{r}
plot(table(format(data[data$majoration == "M" ,]$dossier_reçu, "%Y/%m"))/ table(format(data$dossier_reçu, "%Y/%m"))[-1], type = "l", col ="green",  main = "évolution de la part de prime majorées en général", las = 2, cex.axis=1)
plot(table(format(data$dossier_reçu, "%Y/%m"))[-1], type = "l", col ="blue",  main = "évolution de la prime en général")
lines(table(format(data[data$majoration == "M" ,]$dossier_reçu, "%Y/%m")), col = "green", type = "l")
legend("topleft", legend=c("majorées", "totale"),   col=c("green", "blue"), lty=1, cex=0.8)

t <- table(format(data[data$majoration == "M" & data$Territoire == "CCLG" ,]$dossier_reçu, "%Y/%m"))
t2 <- as.vector(t)
names(t2) <- names(t)
t2 <- c(t2, "2016/04" = 0)
t2 <- c(t2, "2020/04" = 0)
t2 <- c(t2, "2020/05" = 0)
sorted_indices <- sort(names(t2))
t2 <- t2[sorted_indices]
t <- as.table(t2)
plot(t/ table(format(data[data$Territoire == "CCLG", ]$dossier_reçu, "%Y/%m"))[-1], type = "l", col ="green",  main =  "évolution de la part de prime majorées au Grésivaudan", cex.names = 0.5)
plot(table(format(data[data$Territoire == "CCLG", ]$dossier_reçu, "%Y/%m"))[-1], type = "l", col ="blue",  main =  "évolution de la prime au Grésivaudan")
lines(t, col = "green", type = "l")
legend("topleft", legend=c("majorées", "totale"),   col=c("green", "blue"), lty=1, cex=0.8)

t <- table(format(data[data$majoration == "M" & data$Territoire == "GAM" ,]$dossier_reçu, "%Y/%m"))
t2 <- as.vector(t)
names(t2) <- names(t)
t2 <- c(t2, "2017/08" = 0)
t2 <- c(t2, "2023/08" = 0)
sorted_indices <- sort(names(t2))
t2 <- t2[sorted_indices]
t <- as.table(t2)
plot(t/ table(format(data[data$Territoire == "GAM", ]$dossier_reçu, "%Y/%m")), type = "l", col ="green",  main =  "évolution de la part de prime majorées à Grenoble")
plot(table(format(data[data$Territoire == "GAM", ]$dossier_reçu, "%Y/%m")), type = "l", col ="blue",  main =  "évolution de la prime à Grenoble")
lines(t, col = "green", type = "l")
legend("topleft", legend=c("majorées", "totale"),   col=c("green", "blue"), lty=1, cex=0.8)

t<- table(format(data[data$majoration == "M" & data$Territoire == "CAPV" ,]$dossier_reçu, "%Y/%m"))
t2 <- as.vector(t)
names(t2) <- names(t)
t2 <- c(t2, "2018/02" = 0)
t2 <- c(t2, "2018/12" = 0)
t2 <- c(t2, "2020/04" = 0)
sorted_indices <- sort(names(t2))
t2 <- t2[sorted_indices]
t <- as.table(t2)
plot(t[-96] / table(format(data[data$Territoire == "CAPV", ]$dossier_reçu, "%Y/%m"))[-96], type = "l", col ="green",  main =  "évolution de la part de prime majorées Pays Voironais")
plot( table(format(data[data$Territoire == "CAPV", ]$dossier_reçu, "%Y/%m")), type = "l", col ="blue",  main =  "évolution de la prime Pays Voironais")
lines(t, col = "green", type = "l")
legend("topleft", legend=c("majorées", "totale"),   col=c("green", "blue"), lty=1, cex=0.8)
```



```{r}
plot(table(format(data[data$majoration == "M" ,]$transfert_facture, "%Y"))[-1]/ table(format(data$transfert_facture, "%Y"))[-c(1,2,3)], type = "l", col ="green",  main = "évolution de la part de prime majorées en général", las = 2, cex.axis=1)
plot(table(format(data$transfert_facture, "%Y"))[-c(1,2,3,12)], type = "l", col ="blue",  main = "évolution de la prime en général")
lines(table(format(data[data$majoration == "M" ,]$transfert_facture, "%Y"))[-1], col = "green", type = "l")
legend("topleft", legend=c("majorées", "totale"),   col=c("green", "blue"), lty=1, cex=0.8)

plot(table(format(data[data$majoration == "M" & data$Territoire == "CCLG" ,]$transfert_facture, "%Y")) / table(format(data[data$Territoire == "CCLG", ]$transfert_facture, "%Y")), type = "l", col ="red",  main =  "évolution de la part de prime majorées par territoire", cex.names = 0.5, ylim = c(0,0.4))
lines(table(format(data[data$majoration == "M" & data$Territoire == "GAM" ,]$transfert_facture, "%Y"))[-1] / table(format(data[data$Territoire == "GAM", ]$transfert_facture, "%Y"))[-c(1,2,3)], type = "l", col ="blue")
lines(table(format(data[data$majoration == "M" & data$Territoire == "CAPV" ,]$transfert_facture, "%Y")) / table(format(data[data$Territoire == "CAPV", ]$transfert_facture, "%Y")), type = "l", col ="green")
legend("topleft", legend=c("Grenoble Métropole", "Grésivaudan", "Pays Voironnais"),  col=c("blue", "red", "green"), lty=1, cex=0.8, bg="transparent")

plot(table(format(data[data$Territoire == "CCLG", ]$transfert_facture, "%Y"))[-1], type = "l", col ="blue",  main =  "évolution de la prime au Grésivaudan")
lines(table(format(data[data$majoration == "M" & data$Territoire == "CCLG" ,]$transfert_facture, "%Y")), col = "green", type = "l")
legend("topleft", legend=c("majorées", "totale"),   col=c("green", "blue"), lty=1, cex=0.8)

plot(table(format(data[data$Territoire == "GAM", ]$transfert_facture, "%Y"))[-c(1,2,3)], type = "l", col ="blue",  main =  "évolution de la prime à Grenoble")
lines(table(format(data[data$majoration == "M" & data$Territoire == "GAM" ,]$transfert_facture, "%Y"))[-1], col = "green", type = "l")
legend("topleft", legend=c("majorées", "totale"),   col=c("green", "blue"), lty=1, cex=0.8)

plot( table(format(data[data$Territoire == "CAPV", ]$transfert_facture, "%Y")), type = "l", col ="blue",  main =  "évolution de la prime Pays Voironais")
lines(table(format(data[data$majoration == "M" & data$Territoire == "CAPV" ,]$transfert_facture, "%Y"))[-9], col = "green", type = "l")
legend("topleft", legend=c("majorées", "totale"),   col=c("green", "blue"), lty=1, cex=0.8)
```

Grésivaudan : stable à ~15/20%

Grenoble : stable à ~15%

Pays Voironnais : augmentation, pic 35% 2022, ont réussi à partir avec un taux assez fort par rapport aux autres


changement de type de mode chauffage : buche -> buche, buche -> granulé, granulé -> granulé, granulé -> buche, en fonction des années
```{r}
plot(table(format(data[data$Type.combustible == "Bûche" & data$Type.combustible.nouveau.materiel == "Bûche" ,]$dossier_reçu, "%Y"))[-c(1,11)], type = "l", col ="black", main = "évolution de bûche vers bûche")
lines(table(format(data[data$Type.combustible == "Bûche" & data$Type.combustible.nouveau.materiel == "Bûche" & data$Territoire == "GAM" ,]$dossier_reçu, "%Y"))[-c(10)], type = "l", col ="blue")
lines(table(format(data[data$Type.combustible == "Bûche" & data$Type.combustible.nouveau.materiel == "Bûche" & data$Territoire == "CCLG"  ,]$dossier_reçu, "%Y"))[-c(1)], type = "l", col ="red")
lines(table(format(data[data$Type.combustible == "Bûche" & data$Type.combustible.nouveau.materiel == "Bûche" & data$Territoire == "CAPV" ,]$dossier_reçu, "%Y"))[-c(9)], type = "l", col ="green")
legend("topleft", legend=c("Grenoble Métropole", "Grésivaudan", "Pays Voironnais", "totale"),  col=c("blue", "red", "green","black"), lty=1, cex=0.8, bg="transparent")

plot(table(format(data[data$Type.combustible == "Bûche" & data$Type.combustible.nouveau.materiel == "Granulés" ,]$dossier_reçu, "%Y"))[-c(10)], type = "l", col ="black", main = "évolution de bûche vers granulés")
lines(table(format(data[data$Type.combustible == "Bûche" & data$Type.combustible.nouveau.materiel == "Granulés" & data$Territoire == "GAM" ,]$dossier_reçu, "%Y"))[-c(10)], type = "l", col ="blue")
lines(table(format(data[data$Type.combustible == "Bûche" & data$Type.combustible.nouveau.materiel == "Granulés" & data$Territoire == "CCLG"  ,]$dossier_reçu, "%Y")), type = "l", col ="red")
lines(table(format(data[data$Type.combustible == "Bûche" & data$Type.combustible.nouveau.materiel == "Granulés" & data$Territoire == "CAPV" ,]$dossier_reçu, "%Y")), type = "l", col ="green")
legend("topleft", legend=c("Grenoble Métropole", "Grésivaudan", "Pays Voironnais", "totale"),  col=c("blue", "red", "green","black"), lty=1, cex=0.8, bg="transparent")

plot(table(format(data[data$Type.combustible == "Granulés" & data$Type.combustible.nouveau.materiel == "Granulés" ,]$dossier_reçu, "%Y"))[-c(8)], type = "l", col ="black", main = "évolution de granulés vers granulés")
lines(table(format(data[data$Type.combustible == "Granulés" & data$Type.combustible.nouveau.materiel == "Granulés" & data$Territoire == "GAM" ,]$dossier_reçu, "%Y"))[-c(8)], type = "l", col ="blue")
t <- table(format(data[data$Type.combustible == "Granulés" & data$Type.combustible.nouveau.materiel == "Granulés" & data$Territoire == "CCLG"  ,]$dossier_reçu, "%Y"))
t2 <- as.vector(t)
names(t2) <- names(t)
t2 <- c(t2, "2020" = 0)
sorted_indices <- sort(names(t2))
t2 <- t2[sorted_indices]
t <- as.table(t2)
lines(t, type = "l", col ="red")
lines(table(format(data[data$Type.combustible == "Granulés" & data$Type.combustible.nouveau.materiel == "Granulés" & data$Territoire == "CAPV" ,]$dossier_reçu, "%Y")), type = "l", col ="green")
legend("topleft", legend=c("Grenoble Métropole", "Grésivaudan", "Pays Voironnais", "totale"),  col=c("blue", "red", "green","black"), lty=1, cex=0.8, bg="transparent")
```

Vers bûche : crise 2020

Vers granulé : crise 2020 et 2022/2023

*ajouter justez les taux évolutions nouveaux combustibles sans anciens ?*

```{r}
plot(table(format(data[data$Type.combustible == "Bûche" & data$Type.combustible.nouveau.materiel == "Bûche",]$dossier_reçu, "%Y"))[-c(1,11)] / table(format(data$dossier_reçu, "%Y"))[-c(1,11)], type = "l", col ="pink", main = "évolution des taux de changement de type de combustible")
lines(table(format(data[data$Type.combustible == "Bûche" & data$Type.combustible.nouveau.materiel == "Granulés" ,]$dossier_reçu, "%Y"))[-c(10)] / table(format(data$dossier_reçu, "%Y"))[-c(1,11)], type = "l", col ="purple")
legend("bottomleft", legend=c("bûche-bûche", "bûche-granulé"),  col=c("pink","purple"), lty=1, cex=0.8, bg="transparent")

plot(table(format(data[data$Type.combustible == "Bûche" & data$Type.combustible.nouveau.materiel == "Bûche" & data$Territoire == "GAM" ,]$dossier_reçu, "%Y"))[-c(10)] / table(format(data[data$Territoire == "GAM" ,]$dossier_reçu, "%Y"))[-c(10)], type = "l", col ="pink", main = "évolution des taux de changement de type de combustible GAM")
lines(table(format(data[data$Type.combustible == "Bûche" & data$Type.combustible.nouveau.materiel == "Granulés" & data$Territoire == "GAM" ,]$dossier_reçu, "%Y"))[-c(10)] / table(format(data[data$Territoire == "GAM" ,]$dossier_reçu, "%Y"))[-c(10)], type = "l", col ="purple")
# lines(table(format(data[data$Type.combustible == "Granulés" & data$Type.combustible.nouveau.materiel == "Granulés" & data$Territoire == "GAM" ,]$dossier_reçu, "%Y"))[-c(8)] / table(format(data[data$Territoire == "GAM" ,]$dossier_reçu, "%Y"))[-c(1,2,10)], type = "l", col ="black")
legend("bottomleft", legend=c("bûche-bûche", "bûche-granulé"),  col=c("pink","purple"), lty=1, cex=0.8, bg="transparent")

plot(table(format(data[data$Type.combustible == "Bûche" & data$Type.combustible.nouveau.materiel == "Bûche" & data$Territoire == "CCLG"  ,]$dossier_reçu, "%Y"))[-c(1)] / table(format(data[data$Territoire == "CCLG"  ,]$dossier_reçu, "%Y"))[-1], type = "l", col ="pink", main = "évolution des taux de changement de type de combustible CCLG")
lines(table(format(data[data$Type.combustible == "Bûche" & data$Type.combustible.nouveau.materiel == "Granulés" & data$Territoire == "CCLG"  ,]$dossier_reçu, "%Y")) / table(format(data[data$Territoire == "CCLG"  ,]$dossier_reçu, "%Y"))[-1], type = "l", col ="purple")
# t <- table(format(data[data$Type.combustible == "Granulés" & data$Type.combustible.nouveau.materiel == "Granulés" & data$Territoire == "CCLG"  ,]$dossier_reçu, "%Y"))
# t2 <- as.vector(t)
# names(t2) <- names(t)
# t2 <- c(t2, "2020" = 0)
# sorted_indices <- sort(names(t2))
# t2 <- t2[sorted_indices]
# t <- as.table(t2)
# lines(t / table(format(data[data$Territoire == "CCLG"  ,]$dossier_reçu, "%Y"))[-c(1,2,3)], type = "l", col ="black")
legend("bottomleft", legend=c("bûche-bûche", "bûche-granulé"),  col=c("pink","purple"), lty=1, cex=0.8, bg="transparent")

plot(table(format(data[data$Type.combustible == "Bûche" & data$Type.combustible.nouveau.materiel == "Bûche" & data$Territoire == "CAPV" ,]$dossier_reçu, "%Y"))[-c(9)] / table(format(data[ data$Territoire == "CAPV" ,]$dossier_reçu, "%Y"))[-9], type = "l", col ="pink", , main = "évolution des taux de changement de type de combustible CAPV")
lines(table(format(data[data$Type.combustible == "Bûche" & data$Type.combustible.nouveau.materiel == "Granulés" & data$Territoire == "CAPV" ,]$dossier_reçu, "%Y")) / table(format(data[ data$Territoire == "CAPV" ,]$dossier_reçu, "%Y"))[-9], type = "l", col ="purple")
# lines(table(format(data[data$Type.combustible == "Granulés" & data$Type.combustible.nouveau.materiel == "Granulés" & data$Territoire == "CAPV" ,]$dossier_reçu, "%Y")) / table(format(data[ data$Territoire == "CAPV" ,]$dossier_reçu, "%Y"))[-c(1,2,3,9)], type = "l", col ="black")
legend("bottomleft", legend=c("bûche-bûche", "bûche-granulé"),  col=c("pink","purple"), lty=1, cex=0.8, bg="transparent")
```

Globalement, le taux de nouveau appareil utilisant du granulé est stable, et chute en 2022, ce qui fait augmenté celui vers la buche







```{r}
revenus = c("20 000 à 30 000 €","30 000 à 40 000 €", "40 000 à 50 000 €", "50 000 à 60 000 €", "60 000 à 70 000 €", "70 000 à 80 000 €", "80 000 à 90 000 €", "Plus de 100 000 €")
colfunc<-colorRampPalette(c("cyan","green","blue"))
color = colfunc(9)
plot(table(format(data[data$Revenus == "Moins de 20 000 €",]$transfert_facture, "%Y")) / table(format(data$transfert_facture, "%Y"))[-c(1,2,3)], type = "l", col = color[1], ylim = c(0, 0.3), main = "évolution de la part de dossier par tranche de revenus")
i = 2
for(n in revenus){
  if(n %in% c("20 000 à 30 000 €", "30 000 à 40 000 €", "Plus de 100 000 €")) lines(table(format(data[data$Revenus == n ,]$transfert_facture, "%Y"))[-1]/ table(format(data$transfert_facture, "%Y"))[-c(1,2,3)], type = "l", col = color[i])
  else lines(table(format(data[data$Revenus == n ,]$transfert_facture, "%Y"))/ table(format(data$transfert_facture, "%Y"))[-c(1,2,3)], type = "l", col = color[i])
  i = i + 1
}
legend("topright", legend=c("Moins de 20 000 €", revenus),  col = color[1:(length(unique(data$Revenus))-1)], lty=1, cex=0.5, bg="transparent")


# plot(table(format(data[data$Revenus == "Moins de 20 000 €" & data$Territoire == "GAM",]$transfert_facture, "%Y")) / table(format(data[data$Territoire == "GAM",]$transfert_facture, "%Y")), type = "l", col = color[1], lty = 1, ylim = c(0, 0.3), main = glue("évolution de la part de dossier par tranche de revenus GAM"))
# i = 2
# for(n in revenus){
# lines(table(format(data[data$Revenus == n & data$Territoire == "GAM",]$transfert_facture, "%Y"))/ table(format(data[data$Territoire == "GAM",]$transfert_facture, "%Y")), type = "l", col = color[i])
# i = i + 1
# }
# legend("topright", legend=c("Moins de 20 000 €", revenus),  col = color[1:(length(unique(data$Revenus))-1)], lty=1, cex=0.5, bg="transparent")
# 
# plot(table(format(data[data$Revenus == "Moins de 20 000 €" & data$Territoire == "CCLG",]$transfert_facture, "%Y")) / table(format(data[data$Territoire == "CCLG",]$transfert_facture, "%Y"))[-1], type = "l", col = color[1], lty = 1, ylim = c(0, 0.3), main = glue("évolution de la part de dossier par tranche de revenus CCLG"))
# i = 2
# for(n in revenus){
#   if(n == "60 000 à 70 000 €") lines(table(format(data[data$Revenus == n & data$Territoire == "CCLG",]$transfert_facture, "%Y"))[-1]/ table(format(data[data$Territoire == "CCLG",]$transfert_facture, "%Y"))[-1], type = "l", col = color[i])
# else lines(table(format(data[data$Revenus == n & data$Territoire == "CCLG",]$transfert_facture, "%Y"))/ table(format(data[data$Territoire == "CCLG",]$transfert_facture, "%Y"))[-1], type = "l", col = color[i])
# i = i + 1
# }
# legend("topright", legend=c("Moins de 20 000 €", revenus),  col = color[1:(length(unique(data$Revenus))-1)], lty=1, cex=0.5, bg="transparent")
```
```{r}
revenus = c("Moins de 20 000 €", "20 000 à 30 000 €","30 000 à 40 000 €", "40 000 à 50 000 €", "50 000 à 60 000 €", "60 000 à 70 000 €", "70 000 à 80 000 €", "80 000 à 90 000 €", "Plus de 100 000 €")
leg = c("Moins de 20 000 €","20 000 à 40 000 €", "40 000 à 60 000 €", "60 000 à 80 000 €","Plus de 80 000 €")
colfunc<-colorRampPalette(c("cyan","green","blue"))
color = colfunc(5)
plot(table(format(data[data$Revenus == "Moins de 20 000 €",]$transfert_facture, "%Y")) / table(format(data$transfert_facture, "%Y"))[-1], type = "l", col = color[1], ylim = c(0, 0.5), main = "évolution de la part de dossier par tranche de revenus")
for(i in 1:4){
  if(i == 3) lines(table(format(data[data$Revenus %in% revenus[(2*i): (2*i+1)] ,]$transfert_facture, "%Y"))[-1]/ table(format(data$transfert_facture, "%Y"))[-1], type = "l", col = color[i+1])
  else lines(table(format(data[data$Revenus %in% revenus[(2*i): (2*i+1)] ,]$transfert_facture, "%Y"))/ table(format(data$transfert_facture, "%Y"))[-1], type = "l", col = color[i+1])
}
legend("topright", legend=leg,  col = color[1:5], lty=1, cex=0.5, bg="transparent")


plot(table(format(data[data$Revenus == "Moins de 20 000 €" & data$Territoire == "GAM",]$transfert_facture, "%Y")) / table(format(data[data$Territoire == "GAM",]$transfert_facture, "%Y")), type = "l", col = color[1], lty = 1, ylim = c(0, 0.5), main = glue("évolution de la part de dossier par tranche de revenus GAM"))
for(i in 1:4){
lines(table(format(data[data$Revenus %in% revenus[(2*i): (2*i+1)] & data$Territoire == "GAM",]$transfert_facture, "%Y"))/ table(format(data[data$Territoire == "GAM",]$transfert_facture, "%Y")), type = "l", col = color[i+1])
}
legend("topright", legend=leg,  col = color[1:5], lty=1, cex=0.5, bg="transparent")


plot(table(format(data[data$Revenus == "Moins de 20 000 €" & data$Territoire == "CCLG",]$transfert_facture, "%Y")) / table(format(data[data$Territoire == "CCLG",]$transfert_facture, "%Y"))[-1], type = "l", col = color[1], lty = 1, ylim = c(0, 0.5), main = glue("évolution de la part de dossier par tranche de revenus CCLG"))
for(i in 1:4){
  if(i == 3) lines(table(format(data[data$Revenus %in% revenus[(2*i): (2*i+1)] & data$Territoire == "CCLG",]$transfert_facture, "%Y"))[-1]/ table(format(data[data$Territoire == "CCLG",]$transfert_facture, "%Y"))[-1], type = "l", col = color[i+1])
else lines(table(format(data[data$Revenus %in% revenus[(2*i): (2*i+1)] & data$Territoire == "CCLG",]$transfert_facture, "%Y"))/ table(format(data[data$Territoire == "CCLG",]$transfert_facture, "%Y"))[-1], type = "l", col = color[i+1])
}
legend("topright", legend=leg,  col = color[1:5], lty=1, cex=0.5, bg="transparent")
```

```{r}
revenus = c("20 000 à 30 000 €","30 000 à 40 000 €", "40 000 à 50 000 €", "50 000 à 60 000 €", "60 000 à 70 000 €", "70 000 à 80 000 €", "80 000 à 90 000 €", "Plus de 100 000 €")
colfunc<-colorRampPalette(c("cyan","green","blue"))
color = colfunc(9)
plot(table(format(data[data$Revenus == "Moins de 20 000 €" ,]$transfert_facture, "%Y")), type = "l", col = color[1], ylim=c(0,200), main = "évolution du nb de dossier par tranche de revenus")

i = 2
for(n in revenus){
lines(table(format(data[data$Revenus == n ,]$transfert_facture, "%Y")) ,col = color[i], type = "l")
  i = i + 1
}
legend("topright", legend=c("Moins de 20 000 €", revenus),  col = color[1:(length(unique(data$Revenus))-1)], lty=1, cex=0.5, bg="transparent")

for(t in unique(data$Territoire)[-3]){
  plot(table(format(data[data$Revenus == "Moins de 20 000 €" & data$Territoire == t,]$transfert_facture, "%Y")) , type = "l", col = color[1],  ylim = c(0, 110), main = glue("évolution du nb de dossier par tranche de revenus à {t}"))

i = 2
for(n in revenus){

lines(table(format(data[data$Revenus == n & data$Territoire == t,]$transfert_facture, "%Y")), type = "l", col =  color[i])
  i = i + 1
}
legend("topleft", legend=c("Moins de 20 000 €", revenus),  col = color[1:(length(unique(data$Revenus))-1)], lty=1, cex=0.5, bg="transparent")
}
```

```{r}
revenus = c("Moins de 20 000 €", "20 000 à 30 000 €","30 000 à 40 000 €", "40 000 à 50 000 €", "50 000 à 60 000 €", "60 000 à 70 000 €", "70 000 à 80 000 €", "80 000 à 90 000 €", "Plus de 100 000 €")
leg = c("Moins de 20 000 €","20 000 à 40 000 €", "40 000 à 60 000 €", "60 000 à 80 000 €","Plus de 80 000 €")
colfunc<-colorRampPalette(c("cyan","green","blue"))
color = colfunc(5)
plot(table(format(data[data$Revenus == "Moins de 20 000 €" ,]$transfert_facture, "%Y")), type = "l", col = color[1], ylim=c(0,350), main = "évolution du nb de dossier par tranche de revenus")

for(i in 1:4){
lines(table(format(data[data$Revenus %in% revenus[(2*i):(2*i+1)] ,]$transfert_facture, "%Y")) ,col = color[i+1], type = "l")
}
legend("topleft", legend= leg,  col = color[1:5], lty=1, cex=0.5, bg="transparent")

for(t in unique(data$Territoire)[-3]){
  plot(table(format(data[data$Revenus == "Moins de 20 000 €" & data$Territoire == t,]$transfert_facture, "%Y")) , type = "l", col = color[1],  ylim = c(0, 200), main = glue("évolution du nb de dossier par tranche de revenus à {t}"))

for(i in 1:4){
lines(table(format(data[data$Revenus %in% revenus[(2*i): (2*i+1)]  & data$Territoire == t,]$transfert_facture, "%Y")), type = "l", col =  color[i+1])
}
legend("topleft", legend=leg,  col = color[1:5], lty=1, cex=0.5, bg="transparent")
}
```

```{r}
plot(table(format(data[data$Revenus == "20 000 à 30 000 €" ,]$transfert_facture, "%m")), type = "l", col = 1, lty = 2, ylim=c(0,150), main = "évolution du nb de dossier par mois par tranche de revenus")
i = 2
for(n in sort(unique(data$Revenus))[-c(1,9)]){
lines(table(format(data[data$Revenus == n ,]$transfert_facture, "%m")) ,col = i, type = "l")
  i = i +1
}
legend("topleft", legend=sort(unique(data$Revenus))[-9],  col=1:(length(unique(data$Revenus))-1), lty=c(2,rep(1,8)), cex=0.5, bg="transparent")

for(t in unique(data$Territoire)[-3]){
  plot(table(format(data[data$Revenus == "20 000 à 30 000 €" & data$Territoire == t,]$transfert_facture, "%m")) , type = "l", col = 1, lty = 2, ylim = c(0, 90), main = glue("évolution du nb de dossier par mois par tranche de revenus à {t}"))
i = 2
for(n in sort(unique(data$Revenus))[-c(1,9)]){
lines(table(format(data[data$Revenus == n & data$Territoire == t,]$transfert_facture, "%m")), type = "l", col = i)
  i = i +1
}
legend("topleft", legend=sort(unique(data$Revenus))[-9],  col=1:(length(unique(data$Revenus))-1), lty=c(2,rep(1,8)), cex=0.5, bg="transparent")
}
```



RAS

```{r}
plot(table(format(data[data$Type.Ancien.appareil == "Foyer ouvert" ,]$dossier_reçu, "%Y"))[-1], type = "l", col = 1, lty = 2, main = "évolution du nb de dossier foyer ouvert")
plot(table(format(data[data$Type.Ancien.appareil == "Foyer ouvert" ,]$dossier_reçu, "%Y"))[-1] / table(format(data$dossier_reçu, "%Y"))[-1], type = "l", col = 1, lty = 2, main = "évolution du taux de foyers ouverts dans les dossiers par an")
plot(table(format(data[data$Type.Ancien.appareil == "Foyer ouvert" ,]$dossier_reçu, "%Y/%m"))[-1] / table(format(data$dossier_reçu, "%Y/%m"))[-1], type = "l", col = 1, lty = 1, main = "évolution du taux de foyers ouverts dans les dossiers par mois")
```

De plus en plus de foyer ouvert, pic hiver 2022/2023

# L'évolution du cout total ttc : 

```{r}
data2 = data[,c("dossier_reçu", "cout_total_TTC", "Territoire", "cout_appareil", "Type.Ancien.appareil")]
data2$dossier_reçu <- format(data$dossier_reçu, "%Y/%m")
data2 = data2[data2$cout_total_TTC > 1,]
data_gp <- data2 %>% group_by(dossier_reçu)
cout_moy_jour <- data_gp %>% summarise(cout_total_TTC = mean(cout_total_TTC))
```

```{r}
ts = ts(cout_moy_jour$cout_total_TTC[-c(1, 102)],  start = c(2015, 11), end = c(2024,2), freq = 12)
plot(decompose(ts)$x, main = "évolution du cout moyen des travaux TTC, date = réception du dossier", ylim = c(4400, 8500))
lines(decompose(ts)$trend, col = "red")
decompose(ts)$trend
```


```{r}
data2 = data[,c("transfert_facture", "cout_total_TTC", "Territoire", "cout_appareil", "Type.Ancien.appareil")]
data2$transfert_facture <- format(data$transfert_facture, "%Y/%m")
#data2 = na.omit(data2)
data2 = data2[data2$cout_total_TTC > 1,]
data_gp <- data2 %>% group_by(transfert_facture)
cout_moy_jour <- data_gp %>% summarise(cout_total_TTC = mean(cout_total_TTC))
```

```{r}
ts = ts(cout_moy_jour$cout_total_TTC[-c(1:3, 105,106)],  start = c(2016, 1), end = c(2024,5), freq = 12)
plot(decompose(ts)$x, main = "évolution du cout moyen des travaux TTC, date = transfert de la facture", ylim = c(4400, 8500))
lines(decompose(ts)$trend, col = "red")
decompose(ts)$trend
```

**Par territoire : **
Dans l'ordre : voironnais, GAM, Grésivaudan :
Ne marce plus car pas d'individu pour tous les mois
```{r}
# cout_moy_jour <- data_gp[data_gp$Territoire == "CAPV", ] %>% summarise(cout_total_TTC = mean(cout_total_TTC))
# ts = ts(cout_moy_jour$cout_total_TTC[-97],  start = c(2016, 03), end = c(2024,05), freq = 12)
# plot(decompose(ts)$x, main = "évolution du cout moyen des travaux TTC CAPV", ylim = c(2300,9000))
# lines(decompose(ts)$trend, col = "red")
# cout_moy_jour <- data_gp[data_gp$Territoire == "GAM", ] %>% summarise(cout_total_TTC = mean(cout_total_TTC))
# ts = ts(cout_moy_jour$cout_total_TTC[-c(1:3, 98,99)],  start = c(2016, 1), end = c(2024,5), freq = 12)
# plot(decompose(ts)$x, main = "évolution du cout moyen des travaux TTC GAM", ylim = c(2300,9000))
# lines(decompose(ts)$trend, col = "red")
# cout_moy_jour <- data_gp[data_gp$Territoire == "CCLG", ] %>% summarise(cout_total_TTC = mean(cout_total_TTC))
# ts = ts(cout_moy_jour$cout_total_TTC[-95],  start = c(2016, 4), end = c(2024,5), freq = 12)
# plot(decompose(ts)$x, main = "évolution du cout moyen des travaux TTC CCLG", ylim = c(2300,9000))
# lines(decompose(ts)$trend, col = "red")
```


```{r}
# cout_moy_jour <- data_gp[data_gp$Territoire == "CAPV", ] %>% summarise(cout_total_TTC = mean(cout_total_TTC))
# ts = ts(cout_moy_jour$cout_total_TTC[-97],  start = c(2016, 03), end = c(2024,05), freq = 12)
# plot(decompose(ts)$trend, col = "green", main = "évolution du cout moyen des travaux TTC", ylim = c(4000,7500))
# cout_moy_jour <- data_gp[data_gp$Territoire == "GAM", ] %>% summarise(cout_total_TTC = mean(cout_total_TTC))
# ts = ts(cout_moy_jour$cout_total_TTC[-c(1:3, 98,99)],  start = c(2016, 1), end = c(2024,5), freq = 12)
# lines(decompose(ts)$trend, col = "blue")
# cout_moy_jour <- data_gp[data_gp$Territoire == "CCLG", ] %>% summarise(cout_total_TTC = mean(cout_total_TTC))
# ts = ts(cout_moy_jour$cout_total_TTC[-95],  start = c(2016, 4), end = c(2024,5), freq = 12)
# lines(decompose(ts)$trend, col = "red")
# legend("topleft", legend=c("Grenoble Métropole", "Grésivaudan", "Pays Voironnais"),
#        col=c("blue", "red", "green"), lty=1, cex=0.8)
```
pv : augmentation 2019

GG : augmentation 2021 

```{r}
# cout_moy_jour <- data_gp[data_gp$Territoire == "CAPV" & data_gp$Type.Ancien.appareil != "Chaudière" & data_gp$cout_total_TTC > 1, ] %>% summarise(cout_total_TTC = mean(cout_total_TTC))
# ts = ts(cout_moy_jour$cout_total_TTC[-97],  start = c(2016, 03), end = c(2024,05), freq = 12)
# plot(decompose(ts)$trend, main = "évolution du cout moyen des travaux TTC, sans les chaudières", ylim = c(4000,7500),col = "green")
# cout_moy_jour <- data_gp[data_gp$Territoire == "GAM" & data_gp$Type.Ancien.appareil != "Chaudière" & data_gp$cout_total_TTC > 1, ] %>% summarise(cout_total_TTC = mean(cout_total_TTC))
# ts = ts(cout_moy_jour$cout_total_TTC[-c(1:3, 98,99)],  start = c(2016, 1), end = c(2024,5), freq = 12)
# lines(decompose(ts)$trend, col = "blue")
# cout_moy_jour <- data_gp[data_gp$Territoire == "CCLG" & data_gp$Type.Ancien.appareil != "Chaudière" & data_gp$cout_total_TTC > 1, ] %>% summarise(cout_total_TTC = mean(cout_total_TTC))
# ts = ts(cout_moy_jour$cout_total_TTC[-95],  start = c(2016, 4), end = c(2024,5), freq = 12)
# lines(decompose(ts)$trend, col = "red")
# legend("topleft", legend=c("Grenoble Métropole", "Grésivaudan", "Pays Voironnais"),
#        col=c("blue", "red", "green"), lty=1, cex=0.8)
```



# L'évolution du montant de la prime : 

```{r}
data2 = data[,c("transfert_facture", "montant_aide", "Territoire")]
data2$transfert_facture <- format(data$transfert_facture, "%Y/%m")
data2 = na.omit(data2)
data2 = data2[data2$montant_aide > 1,]
data_gp <- data2 %>% group_by(transfert_facture)
cout_moy_jour <- data_gp %>% summarise(montant_aide = mean(montant_aide))
```


**Par territoire : **
Dans l'ordre : voironnais, GAM, Grésivaudan :

```{r}
cout_moy_jour <- data_gp[data_gp$Territoire == "CAPV", ] %>% summarise(montant_aide = mean(montant_aide))
ts = ts(cout_moy_jour$montant_aide,  start = c(2016, 01), end = c(2024,01), freq = 12)
plot(decompose(ts)$x, main = "évolution du montant moyen de l'aide CAPV")
lines(decompose(ts)$trend, col = "red")

cout_moy_jour <- data_gp[data_gp$Territoire == "GAM", ] %>% summarise(montant_aide = mean(montant_aide))
ts = ts(cout_moy_jour$montant_aide,  start = c(2015, 11), end = c(2024,2), freq = 12)
plot(decompose(ts)$x, main = "évolution du montant moyen de l'aide GAM")
lines(decompose(ts)$trend, col = "red")

cout_moy_jour <- data_gp[data_gp$Territoire == "CCLG", ] %>% summarise(montant_aide = mean(montant_aide))
ts = ts(cout_moy_jour$montant_aide[-1],  start = c(2015, 11), end = c(2023,12), freq = 12)
plot(decompose(ts)$x, main = "évolution du montant moyen de l'aide CCLG")
lines(decompose(ts)$trend, col = "red")
```


```{r}
cout_moy_jour <- data_gp[data_gp$Territoire == "CAPV", ] %>% summarise(montant_aide = mean(montant_aide), nb_prime = n())
cout_moy_jour <- rbind(cout_moy_jour, list('2020/04', 0,0))
cout_moy_jour <- cout_moy_jour[order(cout_moy_jour$transfert_facture),]
ts = ts(cout_moy_jour$montant_aide * cout_moy_jour$nb_prime,  start = c(2016, 03), end = c(2024,01), freq = 12)
plot(decompose(ts)$x, main = "évolution somme du montant des primes CAPV, date : transfert facture")
lines(decompose(ts)$trend, col = "red")
lpv = decompose(ts)$trend

cout_moy_jour <- data_gp[data_gp$Territoire == "GAM", ] %>% summarise(montant_aide = mean(montant_aide), nb_prime = n())
cout_moy_jour <- cout_moy_jour[-c(1,2,3,98),]
cout_moy_jour <- rbind(cout_moy_jour, data.frame("transfert_facture" = c("2016/03","2016/04","2016/05","2016/06","2016/07","2016/08","2020/04"), 
                                                 "montant_aide" = rep(0, 7), 
                                                 nb_prime = rep(0, 7)))
cout_moy_jour <- cout_moy_jour[order(cout_moy_jour$transfert_facture),]
ts = ts(cout_moy_jour$montant_aide * cout_moy_jour$nb_prime,  start = c(2016, 1), end = c(2024,5), freq = 12)
plot(decompose(ts)$x, main = "évolution somme du montant des primes GAM, date : transfert facture")
lines(decompose(ts)$trend, col = "red")
lgam = decompose(ts)$trend

cout_moy_jour <- data_gp[data_gp$Territoire == "CCLG", ] %>% summarise(montant_aide = mean(montant_aide), nb_prime = n())
cout_moy_jour <- rbind(cout_moy_jour, data.frame("transfert_facture" = c("2023/02","2023/12"), 
                                                 "montant_aide" = rep(0, 2), 
                                                 nb_prime = rep(0, 2)))
cout_moy_jour <- cout_moy_jour[order(cout_moy_jour$transfert_facture),]
ts = ts(cout_moy_jour$montant_aide * cout_moy_jour$nb_prime,  start = c(2016, 4), end = c(2024,5), freq = 12)
plot(decompose(ts)$x, main = "évolution somme du montant des primes CCLG, date : transfert facture")
lines(decompose(ts)$trend, col = "red")
lg = decompose(ts)$trend


plot(lpv, main = "Évolution de la somme des primes versées, date = transfert de la facture", col = "green", ylim = c(0,75000))
lines(lgam, col = "blue")
lines(lg, col = "red")
legend("topleft", legend=c("Grenoble Métropole", "Grésivaudan", "Pays Voironnais"), col=c("blue", "red", "green"), lty=1, cex=0.8)
```
```{r}
sum(data[data$Territoire == "CAPV" & data$majoration == "M" & !is.na(data$transfert_facture),"montant_aide"],na.rm = TRUE)
sum(data[data$Territoire == "CAPV" & data$majoration == "NM" & !is.na(data$transfert_facture),"montant_aide"],na.rm = TRUE)

sum(data[data$Territoire == "CCLG" & data$majoration == "M" & !is.na(data$transfert_facture),"montant_aide"],na.rm = TRUE)
sum(data[data$Territoire == "CCLG" & data$majoration == "NM" & !is.na(data$transfert_facture),"montant_aide"],na.rm = TRUE)

sum(data[data$Territoire == "GAM" & data$majoration == "M" & !is.na(data$transfert_facture),"montant_aide"],na.rm = TRUE)
sum(data[data$Territoire == "GAM" & data$majoration == "NM" & !is.na(data$transfert_facture),"montant_aide"],na.rm = TRUE)

sum(data[data$majoration == "M" & !is.na(data$transfert_facture),"montant_aide"],na.rm = TRUE)
sum(data[data$majoration == "NM" & !is.na(data$transfert_facture),"montant_aide"],na.rm = TRUE)

count(data[data$Territoire == "CAPV" & data$majoration == "M" & !is.na(data$transfert_facture),"montant_aide"],na.rm = TRUE)
count(data[data$Territoire == "CAPV" & data$majoration == "NM" & !is.na(data$transfert_facture),"montant_aide"],na.rm = TRUE)

count(data[data$Territoire == "CCLG" & data$majoration == "M" & !is.na(data$transfert_facture),"montant_aide"],na.rm = TRUE)
count(data[data$Territoire == "CCLG" & data$majoration == "NM" & !is.na(data$transfert_facture),"montant_aide"],na.rm = TRUE)

count(data[data$Territoire == "GAM" & data$majoration == "M" & !is.na(data$transfert_facture),"montant_aide"],na.rm = TRUE)
count(data[data$Territoire == "GAM" & data$majoration == "NM" & !is.na(data$transfert_facture),"montant_aide"],na.rm = TRUE)

count(data[data$majoration == "M" & !is.na(data$transfert_facture),"montant_aide"],na.rm = TRUE)
count(data[data$majoration == "NM" & !is.na(data$transfert_facture),"montant_aide"],na.rm = TRUE)
```


```{r}
# for(colname in names(enquete)){
# myplot <- ggplot(enquete, aes(x = enquete %>% pull(colname), main = glue("Répartition des modalités de : {colname}"))) + 
#       geom_bar(stat = 'count') +  
#       coord_flip() + 
#       ggtitle(colname) +
#       theme(axis.title.x = element_blank(),axis.title.y = element_blank())
#     ggsave(glue("../data/3_Resultat/graphes/Univariés/enquete_quali/{colname}.png"), myplot, device = "png")
# }
```

```{r}
p <- ggplot(enquete, aes(x = enquete %>% pull("Type d'appareil précédent"), fill = enquete %>% pull("Type d'appareil actuel"))) + geom_bar(position = "stack")
    ggsave(glue("../data/3_Resultat/graphes/Univariés/enquete_quali/ancien_nouveau_matériel.png"), p, device = "png")
p
```

```{r}
myplot <- ggplot(enquete, aes(x = enquete %>% pull("L'usage de votre appareil (plaisir / appoint / chauffage principal) initialement prévu a-t-elle évolué par rapport à ce que vous aviez prévu ?"))) +
      geom_bar(stat = 'count') +
      coord_flip() +
      ggtitle('évolution utilisation appareil') +
      theme(axis.title.x = element_blank(),axis.title.y = element_blank())
    ggsave(glue("../data/3_Resultat/graphes/Univariés/enquete_quali/{'évolution utilisation appareil'}.png"), myplot, device = "png")
myplot

myplot <- ggplot(enquete, aes(x = enquete %>% pull("Avez-vous eu une évolution importante entre ce qui était prévu dans le devis et dans la facture ?"))) +
      geom_bar(stat = 'count') +
      coord_flip() +
      ggtitle('évolution devis facture') +
      theme(axis.title.x = element_blank(),axis.title.y = element_blank())
    ggsave(glue("../data/3_Resultat/graphes/Univariés/enquete_quali/{'évolution devis facture'}.png"), myplot, device = "png")
myplot

myplot <- ggplot(enquete, aes(x = enquete %>% pull("Approvisionnement du combustible :"))) +
      geom_bar(stat = 'count') +
      coord_flip() +
      ggtitle('Approvisionnement du combustible') +
      theme(axis.title.x = element_blank(),axis.title.y = element_blank())
    ggsave(glue("../data/3_Resultat/graphes/Univariés/enquete_quali/{'Approvisionnement du combustible'}.png"), myplot, device = "png")
myplot

```


```{r}
colonne <- "L'usage de votre appareil (plaisir / appoint / chauffage principal) initialement prévu a-t-elle évolué par rapport à ce que vous aviez prévu ?"

# Calcul des fréquences pour chaque catégorie
enquete_summary <- enquete %>%
  group_by(!!sym(colonne)) %>%
  summarize(count = n()) %>%
  mutate(percentage = count / sum(count) * 100)

# Créer un pie chart
myplot <- ggplot(enquete_summary, aes(x = "", y = count, fill = !!sym(colonne))) +
  geom_bar(width = 1, stat = "identity") +
  coord_polar(theta = "y") +
  geom_text(aes(label = paste0(sprintf("%.1f", percentage), "%")), position = position_stack(vjust = 0.5)) +
  ggtitle("Évolution utilisation appareil") +
  theme_void() +
  theme(legend.title = element_blank()) +
  guides(fill = guide_legend(title = "Évolution"))
myplot
ggsave(glue("../data/3_Resultat/graphes/Univariés/enquete_quali/{'évolution utilisation appareil2'}.png"), myplot, device = "png")

colonne <- "Avez-vous eu une évolution importante entre ce qui était prévu dans le devis et dans la facture ?"
enquete_summary <- enquete %>%
  group_by(!!sym(colonne)) %>%
  summarize(count = n()) %>%
  mutate(percentage = count / sum(count) * 100)
myplot <- ggplot(enquete_summary, aes(x = "", y = count, fill = !!sym(colonne))) +
  geom_bar(width = 1, stat = "identity") +
  coord_polar(theta = "y") +
  geom_text(aes(label = paste0(sprintf("%.1f", percentage), "%")), position = position_stack(vjust = 0.5)) +
  ggtitle("Évolution devis facture") +
  theme_void() +
  theme(legend.title = element_blank()) +
  guides(fill = guide_legend(title = "Évolution"))
ggsave(glue("../data/3_Resultat/graphes/Univariés/enquete_quali/{'évolution devis facture2'}.png"), myplot, device = "png")
 myplot

colonne <- "Auriez-vous réalisé le remplacement SANS Prime Air Bois"
enquete_summary <- enquete %>%
  group_by(!!sym(colonne)) %>%
  summarize(count = n()) %>%
  mutate(percentage = count / sum(count) * 100)
myplot <- ggplot(enquete_summary, aes(x = "", y = count, fill = !!sym(colonne))) +
  geom_bar(width = 1, stat = "identity") +
  coord_polar(theta = "y") +
  geom_text(aes(label = paste0(sprintf("%.1f", percentage), "%")), position = position_stack(vjust = 0.5)) +
  ggtitle("Auriez-vous réalisé le remplacement SANS Prime Air Bois") +
  theme_void() +
  theme(legend.title = element_blank()) +
  guides(fill = guide_legend(title = "Évolution"))
ggsave(glue("../data/3_Resultat/graphes/Univariés/enquete_quali/{'Auriez-vous réalisé le remplacement SANS Prime Air Bois2'}.png"), myplot, device = "png")
myplot

```


```{r}
# bb <- enquete %>% filter(`Combustible appareil actuel` == "Bûche")
# #print(sort(table(bb$`Le chiffre de la question précédente concerne :`)))
# 
# bb <- enquete %>% filter(`Combustible appareil actuel` == "Bois de récupération")
# #print(table(bb$`Le chiffre de la question précédente concerne :`))
# 
# bb <- enquete %>% filter(`Combustible appareil actuel` == "Granulés / Pellets")
# print(table(bb$`Le chiffre de la question précédente concerne :`))
```

```{r}
# transfo <- function(qt, unite, type){
#   if( is.na(qt) || is.na(unite) || is.na(type)) return(NA)
#   qt = as.numeric(qt)
#   if(type == "Bûche"){
#     if(unite %in% c("Stères", "Mètre cube (M3)")){
#       return(qt)
#     } # à verif 
#   }
#   else if(type == "Bois de récupération"){
#     if(unite %in% c("Stères")) return(qt)
#   }
#   else if(type == "Granulés / Pellets"){
#     if(unite %in% c("Stères", "Mètre cube (M3)")) return(qt)
#     else if(unite %in% c("Tonnes")) return( qt * 4800 /1500)
#     else if(unite == "Sacs") return( (qt *15 * 4.8) /1500)
#   }
#   
#   return(NA)
# }
# 
# eq_stere = c()
# 
# for(i in 1:dim(enquete)[1]){
#   eq_stere = c(eq_stere,transfo(enquete[i,"Quelle quantité de bois avez-vous utilisé l'hiver dernier avec votre nouvel appareil ?"], enquete[i, "Le chiffre de la question précédente concerne :"], enquete[i, "Combustible appareil actuel"]))
# }
# plot(density(na.omit(eq_stere)))
# summary(na.omit(eq_stere))
# # 2.000   3.200   3.908   5.000
# par(mfrow=c(1,2))
# boxplot(na.omit(eq_stere), ylim = c(-1,20))
# boxplot(na.omit(data$équivalent_steres), ylim = c(-1,20))
```